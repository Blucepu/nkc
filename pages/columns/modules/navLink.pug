mixin mixinColumnNavLink(column, navCategories, categories)
  .column-nav-body
    .column
      #dropdownApp(v-cloak)
        div(:style='"left: " + left + "px;top:" + top + "px;"' v-if='show')
          .dropdown-lists
            a.dropdown-li(
              v-for='c in categories'
              :style="'margin-left:' + (c.level * 10) + 'px'"
              :href="c.url"
              :title='c.url'
              ) {{c.name}}
      ul.column-ul
        li
          a(href=`/m/${column._id}`) 首页
        //- 是否展开分类
        if !column.navCategory
          //- 不展开分类
          //- 专栏内所有文章分类 仅有一个下拉列表
          li
            -var _categories = [{name: '全部', url: column.columnUrl, level: 0}];
            for c in categories
              -_categories.push({name: c.name, url: c.columnCategoryUrl, level: c.level});
            a(
              data-type='columnDropdownMenu'
              data-categories=objToStr({categories: _categories})
              ) 分类&nbsp;
              .fa.fa-caret-down.pointer
        else
          //- 展开文章分类
          //- 虽然文章分类已展开，但子分类依然处于下来列表中
          for c in navCategories
            if !column.hideDefaultCategory || !c.default
              if c.children && c.children.length
                -var _categories = [];
                for cc in c.children
                  -_categories.push({name: cc.name, url: cc.columnCategoryUrl, level: cc.level});
                li(
                  data-type='columnDropdownMenu'
                  data-categories=objToStr({categories: _categories})
                  )
                  a(href=`/m/${column._id}?c=${c._id}` style="margin-right: 0;padding-right:0")=c.name
                  a.column-caret.fa.fa-caret-down.pointer(data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
                  //-ul.dropdown-menu
                    for cc in c.children
                      li
                        a(href=`/m/${column._id}?c=${cc._id}` style="overflow:hidden")
                          -for (var i = 0; i < (cc.level - 1); i++)
                            span &nbsp;&nbsp;&nbsp;&nbsp;
                          span=cc.name
              else
                li
                  a(href=c.columnCategoryUrl)=c.name
                  //-a(href=`/m/${column._id}?c=${c._id}`)=c.name
        //- 用户自定义专栏导航
        //- 子导航也处于下拉列表中
        for link in column.links
          if link.links && link.links.length > 0
            -var _categories = [];
            for l in link.links
              -_categories.push({name: l.name, url: l.url, level: 0})
            li(
              data-type='columnDropdownMenu'
              data-categories=objToStr({categories: _categories})
            )
              a(title=link.url onclick=`openNewWindow('${link.url}')` style="margin-right: 0;padding-right:0")=link.name
              a.fa.column-caret.fa-caret-down.pointer(data-toggle="dropdown" aria-haspopup="true" aria-expanded="false")
              //-ul.dropdown-menu
                for l in link.links
                  li
                    a(title=link.url onclick=`openNewWindow('${l.url}')` style="overflow:hidden")=l.name
          else
            li
              a(title=link.url onclick=`openNewWindow('${link.url}')`)= link.name


mixin mixinColumnNavLinkScript
  script.
    // vue 用于渲染列表
    var dropdownApp = new Vue({
      el: '#dropdownApp',
      data: {
        show: false,
        categories: 0,
        top: 0,
        left: 0,

        inPanel: false,
        inList: false
      },
      methods: {
        showPanel: function() {
          this.show = true;
        },
        hidePanel: function() {
          if(this.show) {
            this.show = false;
            this.inPanel = false;
            this.inList = false;
          }
        }
      }
    });
    // 注册鼠标移入移出事件
    $(function() {
      var menus = $('[data-type="columnDropdownMenu"]');
      for(var i = 0; i < menus.length; i++) {
        initMenuEvent(menus.eq(i));
      }
      $(dropdownApp.$el).on('mouseover', function () {
        dropdownApp.inPanel = true;
      });
      $(dropdownApp.$el).on('mouseleave', function () {
        dropdownApp.inPanel = false;
        dropdownApp.hidePanel();
      });

    });

    // 点击页面或改变窗口大小 隐藏列表
    window.addEventListener('resize', dropdownApp.hidePanel);
    // window.addEventListener('click', dropdownApp.hidePanel);

    function initMenuEvent(el) {
      var categoriesString = el.attr('data-categories');
      var categories = NKC.methods.strToObj(categoriesString).categories;
      el.on('mouseover', function() {
        var left = el.offset().left;
        var top = el.offset().top;
        var height = el.height();
        dropdownApp.inList = true;
        dropdownApp.top = top + height + 0;
        dropdownApp.left = left;
        dropdownApp.categories = categories;
        dropdownApp.showPanel();
      });
      el.on('mouseleave', function() {
        // 鼠标移出后需判断是否悬浮在列表上
        dropdownApp.inList = false;
        setTimeout(function() {
          if(!dropdownApp.inPanel && !dropdownApp.inList) {
            dropdownApp.hidePanel();
          }
        });
      });
    }
