-const showTicks = data.userLevel > 4 && data.forum
-const {firstPost, lastPost, tid, hasCover} = thread
-const {t, toc} = firstPost;
-const targetUser = firstPost.user;
-const {_cid} = data;
-let childrenForum;
-let parentForum;
-const forum = data.forum || {fid: '_cannot_be_equal_'}
-data.forumList.forEach(p => {if(p.children){p.children.forEach(c => {if (c.fid === firstPost.fid) {childrenForum = c;parentForum = p}})}});
.new-content
  .new-content-info
    span
      a(href=`/u/${targetUser.uid}` title=`${targetUser.description || ''}`)
        img(src=`/avatar_small/${targetUser.uid}` style='width: 30px;')
    span
      a(href=`/u/${targetUser.uid}`)= targetUser.username
    if(parentForum && forum.fid === '_cannot_be_equal_')
      span.new-content-forumAbbr(style=`background-color:${parentForum.color};`)
        a(href=`/f/${parentForum.fid}` title=`${parentForum.description || ''}`)= parentForum.displayName
    if(childrenForum && childrenForum.fid !== forum.fid)
      span.new-content-forumAbbr(style=`background-color:${childrenForum.color};`)
        a(href=`/f/${childrenForum.fid}` title=`${childrenForum.description || ''}`)= childrenForum.abbr
    if(thread.cid && !_cid && data.threadTypes)
      -const threadtype = data.threadTypes.find(k=>k.cid==thread.cid)
        if threadtype
          a.ForumThreadHasImage(href=`/f/${thread.fid}?cat=${threadtype.cid}` style=`background-color:${forumcolor};`) #{threadtype.name}
    span.icon-font(title=`${Date(toc)}`)=fromNow(toc)
    if thread
      span(title=`${thread.hits}次浏览`)
        span.glyphicon.glyphicon-eye-open.icon
        span.icon-font=thread.hits
      span(title=`${thread.count-1}条回复`)
        span.glyphicon.glyphicon-comment.icon
        span.icon-font=(thread.count-1)
    else
      span(title=`${firstPost.recUsers.length}次点赞`)
        span.glyphicon.glyphicon-heart.icon
        span.icon-font=firstPost.recUsers.length
  .new-content-title
    -let digest = '';
    if thread && thread.digest
      -digest = 'digest-thread-title';
    a.ForumThreadNormal(class=digest href=`/t/${tid}`)
      span #{t}
    -const pageCount = thread.count / 30
    -let ellipsis = false
    - for(let i = 1; i < pageCount; i++)
      if(i < 4 || i > pageCount - 3)
        a(href=`/t/${thread.tid}?&page=${i}` style='font-size: 14px; text-decoration: none; font-weight: normal; margin-left: 0.5rem;')
          span(style='padding-left: 0.5rem; padding-right: 0.5rem; margin: 0.3rem; background-color: #04A5EA; color: white; border-radius: 0.4rem;') #{i + 1}
      else if(!ellipsis)
        -ellipsis = true
        span(style='padding-left: 0.5rem; padding-right: 0.5rem; margin: 0.3rem; background-color: #04A5EA; color: white; border-radius: 0.4rem;') ...
    input.ThreadCheckboxes(id=`${tid}` type='checkbox' style=`float: right; ${showTicks?'':'display:none;'}`)
  .new-content-body
    -let heightType = 'max-height';
    if hasCover
      -heightType = 'height';
      a.new-content-left(style=`background-image: url(/cover/${tid})` href=`/t/${tid}`)
    div(class=hasCover?'hasCover':'')
      .new-content-right
        div
          p
            -firstPost.c = hideContentByUser(firstPost.c, data.user, 'list')
            -firstPost.c = filterQuote(firstPost.c)
            -firstPost.c = firstPost.c.slice(0, 600);
            a(href=`/t/${tid}`)!= replaceContent(experimental_render(firstPost))
        div
          p
            -lastPost.c = hideContentByUser(lastPost.c, data.user, 'list')
            -lastPost.c = filterQuote(lastPost.c)
            -lastPost.c = lastPost.c.slice(0, 250);
            a(href=`/t/${tid}?&last_page=true#${lastPost.pid}`)!= replaceContent(experimental_render(lastPost))
      .new-content-info-last
        span
          a(href=`/u/${lastPost.user.uid}`)= lastPost.user.username
        span.icon-font=` ${fromNow(lastPost.toc)}`
hr(style='margin: 2px 0 2px 0;')