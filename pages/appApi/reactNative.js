(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

NKC.methods.rn = {
  index: 0,
  callback: {}
};

NKC.methods.rn.postMessage = function (obj) {
  window.ReactNativeWebView.postMessage(JSON.stringify(obj));
};

NKC.methods.rn.emit = function (type, data, callback) {
  data = data || {};
  var index = NKC.methods.rn.index++;
  NKC.methods.rn.callback[index] = callback;
  NKC.methods.rn.postMessage({
    type: type,
    data: data,
    webFunctionId: index
  });
};

NKC.methods.rn.onMessage = function (res) {
  var webFunctionId = res.webFunctionId;
  var data = res.data;
  var func = NKC.methods.rn.callback[webFunctionId];

  if (func) {
    func(data);
  }
};

function urlPathEval(fromUrl, toUrl) {
  if (!toUrl) {
    toUrl = fromUrl;
    fromUrl = location.href;
  }

  var fullFromUrl = new URL(fromUrl, location.origin);
  return new URL(toUrl, fullFromUrl).href;
}

document.body.addEventListener('click', function (e) {
  var target = e.target;
  var targetNodeName = target.nodeName.toLowerCase();
  var dataType = target.getAttribute('data-type');
  var src = target.getAttribute('src');
  if (!src) src = target.getAttribute('data-src');

  if (targetNodeName === 'img' && dataType === 'view' && src) {
    src = window.location.origin + src; // 图片处理

    var images = document.querySelectorAll('img[data-type="view"]');
    var urls = [];
    var index;

    for (var i = 0; i < images.length; i++) {
      var image = images[i];
      var name = image.getAttribute('alt');

      var _src = image.getAttribute('src');

      if (!_src) {
        _src = image.getAttribute('data-src');
      }

      if (!_src) return;
      _src = window.location.origin + _src;

      if (_src === src) {
        index = i;
      }

      urls.push({
        url: _src,
        name: name
      });
    }

    NKC.methods.rn.emit('viewImage', {
      urls: urls,
      index: index
    });
    e.preventDefault();
  } else {
    // 链接处理
    var $a = null;

    if (targetNodeName === 'a') {
      $a = target;
    } else {
      $a = $(target).parents('a');
      if ($a.length) $a = $a[0];
    }

    var href, title;

    if ($a) {
      href = $a.getAttribute('href');
      title = $a.getAttribute('title');
    }

    if (href && $a.getAttribute('data-type') !== 'reload') {
      e.preventDefault();
      var targetUrl = urlPathEval(location.href, href);
      NKC.methods.rn.emit('openNewPage', {
        href: targetUrl,
        title: title
      });
    }
  }
}); // 同步cookie信息

NKC.methods.rn.emit('syncPageInfo', {
  uid: NKC.configs.uid
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwYWdlcy9hcHBBcGkvcmVhY3ROYXRpdmUubWpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxHQUFHLENBQUMsT0FBSixDQUFZLEVBQVosR0FBaUI7QUFDZixFQUFBLEtBQUssRUFBRSxDQURRO0FBRWYsRUFBQSxRQUFRLEVBQUU7QUFGSyxDQUFqQjs7QUFLQSxHQUFHLENBQUMsT0FBSixDQUFZLEVBQVosQ0FBZSxXQUFmLEdBQTZCLFVBQVMsR0FBVCxFQUFjO0FBQ3pDLEVBQUEsTUFBTSxDQUFDLGtCQUFQLENBQTBCLFdBQTFCLENBQXNDLElBQUksQ0FBQyxTQUFMLENBQWUsR0FBZixDQUF0QztBQUNELENBRkQ7O0FBSUEsR0FBRyxDQUFDLE9BQUosQ0FBWSxFQUFaLENBQWUsSUFBZixHQUFzQixVQUFTLElBQVQsRUFBZSxJQUFmLEVBQXFCLFFBQXJCLEVBQStCO0FBQ25ELEVBQUEsSUFBSSxHQUFHLElBQUksSUFBSSxFQUFmO0FBQ0EsTUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLE9BQUosQ0FBWSxFQUFaLENBQWUsS0FBZixFQUFaO0FBQ0EsRUFBQSxHQUFHLENBQUMsT0FBSixDQUFZLEVBQVosQ0FBZSxRQUFmLENBQXdCLEtBQXhCLElBQWlDLFFBQWpDO0FBQ0EsRUFBQSxHQUFHLENBQUMsT0FBSixDQUFZLEVBQVosQ0FBZSxXQUFmLENBQTJCO0FBQ3pCLElBQUEsSUFBSSxFQUFFLElBRG1CO0FBRXpCLElBQUEsSUFBSSxFQUFFLElBRm1CO0FBR3pCLElBQUEsYUFBYSxFQUFFO0FBSFUsR0FBM0I7QUFLRCxDQVREOztBQVdBLEdBQUcsQ0FBQyxPQUFKLENBQVksRUFBWixDQUFlLFNBQWYsR0FBMkIsVUFBUyxHQUFULEVBQWM7QUFDdkMsTUFBSSxhQUFhLEdBQUcsR0FBRyxDQUFDLGFBQXhCO0FBQ0EsTUFBSSxJQUFJLEdBQUcsR0FBRyxDQUFDLElBQWY7QUFD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QUcsQ0FBQyxDQUFDLE1BQUQsQ0FBRCxDQUFVLE9BQVYsQ0FBa0IsR0FBbEIsQ0FBTDtBQUNBLFVBQUcsRUFBRSxDQUFDLE1BQU4sRUFBYyxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUQsQ0FBUDtBQUNmOztBQUNELFFBQUksSUFBSixFQUFVLEtBQVY7O0FBQ0EsUUFBRyxFQUFILEVBQU87QUFDTCxNQUFBLElBQUksR0FBRyxFQUFFLENBQUMsWUFBSCxDQUFnQixNQUFoQixDQUFQO0FBQ0EsTUFBQSxLQUFLLEdBQUcsRUFBRSxDQUFDLFlBQUgsQ0FBZ0IsT0FBaEIsQ0FBUjtBQUNEOztBQUNELFFBQUcsSUFBSSxJQUFJLEVBQUUsQ0FBQyxZQUFILENBQWdCLFdBQWhCLE1BQWlDLFFBQTVDLEVBQXNEO0FBQ3BELE1BQUEsQ0FBQyxDQUFDLGNBQUY7QUFDQSxVQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsUUFBUSxDQUFDLElBQVYsRUFBZ0IsSUFBaEIsQ0FBN0I7QUFDQSxNQUFBLEdBQUcsQ0FBQyxPQUFKLENBQVksRUFBWixDQUFlLElBQWYsQ0FBb0IsYUFBcEIsRUFBbUM7QUFDakMsUUFBQSxJQUFJLEVBQUUsU0FEMkI7QUFFakMsUUFBQSxLQUFLLEVBQUw7QUFGaUMsT0FBbkM7QUFJRDtBQUNGO0FBQ0YsQ0F6REQsRSxDQTJEQTs7QUFDQSxHQUFHLENBQUMsT0FBSixDQUFZLEVBQVosQ0FBZSxJQUFmLENBQW9CLGNBQXBCLEVBQW9DO0FBQUMsRUFBQSxHQUFHLEVBQUUsR0FBRyxDQUFDLE9BQUosQ0FBWTtBQUFsQixDQUFwQyIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsIk5LQy5tZXRob2RzLnJuID0ge1xyXG4gIGluZGV4OiAwLFxyXG4gIGNhbGxiYWNrOiB7fVxyXG59O1xyXG5cclxuTktDLm1ldGhvZHMucm4ucG9zdE1lc3NhZ2UgPSBmdW5jdGlvbihvYmopIHtcclxuICB3aW5kb3cuUmVhY3ROYXRpdmVXZWJWaWV3LnBvc3RNZXNzYWdlKEpTT04uc3RyaW5naWZ5KG9iaikpO1xyXG59O1xyXG5cclxuTktDLm1ldGhvZHMucm4uZW1pdCA9IGZ1bmN0aW9uKHR5cGUsIGRhdGEsIGNhbGxiYWNrKSB7XHJcbiAgZGF0YSA9IGRhdGEgfHwge307XHJcbiAgdmFyIGluZGV4ID0gTktDLm1ldGhvZHMucm4uaW5kZXgrKztcclxuICBOS0MubWV0aG9kcy5ybi5jYWxsYmFja1tpbmRleF0gPSBjYWxsYmFjaztcclxuICBOS0MubWV0aG9kcy5ybi5wb3N0TWVzc2FnZSh7XHJcbiAgICB0eXBlOiB0eXBlLFxyXG4gICAgZGF0YTogZGF0YSxcclxuICAgIHdlYkZ1bmN0aW9uSWQ6IGluZGV4XHJcbiAgfSk7XHJcbn07XHJcblxyXG5OS0MubWV0aG9kcy5ybi5vbk1lc3NhZ2UgPSBmdW5jdGlvbihyZXMpIHtcclxuICB2YXIgd2ViRnVuY3Rpb25JZCA9IHJlcy53ZWJGdW5jdGlvbklkO1xyXG4gIHZhciBkYXRhID0gcmVzLmRhdGE7XHJcbiAgdmFyIGZ1bmMgPSBOS0MubWV0aG9kcy5ybi5jYWxsYmFja1t3ZWJGdW5jdGlvbklkXTtcclxuICBpZihmdW5jKSB7XHJcbiAgICBmdW5jKGRhdGEpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gdXJsUGF0aEV2YWwoZnJvbVVybCwgdG9VcmwpIHtcclxuICBpZiAoIXRvVXJsKSB7XHJcbiAgICB0b1VybCA9IGZyb21Vcmw7XHJcbiAgICBmcm9tVXJsID0gbG9jYXRpb24uaHJlZjtcclxuICB9XHJcbiAgbGV0IGZ1bGxGcm9tVXJsID0gbmV3IFVSTChmcm9tVXJsLCBsb2NhdGlvbi5vcmlnaW4pO1xyXG4gIHJldHVybiBuZXcgVVJMKHRvVXJsLCBmdWxsRnJvbVVybCkuaHJlZjtcclxufVxyXG5cclxuXHJcblxyXG5kb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpICA9PiB7XHJcbiAgY29uc3QgdGFyZ2V0ID0gZS50YXJnZXQ7XHJcbiAgY29uc3QgdGFyZ2V0Tm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcclxuICBjb25zdCBkYXRhVHlwZSA9IHRhcmdldC5nZXRBdHRyaWJ1dGUoJ2RhdGEtdHlwZScpO1xyXG4gIGxldCBzcmMgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdzcmMnKTtcclxuICBpZighc3JjKSBzcmMgPSB0YXJnZXQuZ2V0QXR0cmlidXRlKCdkYXRhLXNyYycpO1xyXG4gIGlmKHRhcmdldE5vZGVOYW1lID09PSAnaW1nJyAmJiBkYXRhVHlwZSA9PT0gJ3ZpZXcnICYmIHNyYykge1xyXG4gICAgc3JjID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArIHNyYztcclxuICAgIC8vIOWbvueJh+WkhOeQhlxyXG4gICAgY29uc3QgaW1hZ2VzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnaW1nW2RhdGEtdHlwZT1cInZpZXdcIl0nKTtcclxuICAgIGNvbnN0IHVybHMgPSBbXTtcclxuICAgIGxldCBpbmRleDtcclxuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBpbWFnZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgaW1hZ2UgPSBpbWFnZXNbaV07XHJcbiAgICAgIGNvbnN0IG5hbWUgPSBpbWFnZS5nZXRBdHRyaWJ1dGUoJ2FsdCcpO1xyXG4gICAgICBsZXQgX3NyYyA9IGltYWdlLmdldEF0dHJpYnV0ZSgnc3JjJyk7XHJcbiAgICAgIGlmKCFfc3JjKSB7XHJcbiAgICAgICAgX3NyYyA9IGltYWdlLmdldEF0dHJpYnV0ZSgnZGF0YS1zcmMnKTtcclxuICAgICAgfVxyXG4gICAgICBpZighX3NyYykgcmV0dXJuO1xyXG4gICAgICBfc3JjID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbiArIF9zcmM7XHJcbiAgICAgIGlmKF9zcmMgPT09IHNyYykge1xyXG4gICAgICAgIGluZGV4ID0gaTtcclxuICAgICAgfVxyXG4gICAgICB1cmxzLnB1c2goe1xyXG4gICAgICAgIHVybDogX3NyYyxcclxuICAgICAgICBuYW1lXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgTktDLm1ldGhvZHMucm4uZW1pdCgndmlld0ltYWdlJywge1xyXG4gICAgICB1cmxzLFxyXG4gICAgICBpbmRleCxcclxuICAgIH0pO1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyDpk77mjqXlpITnkIZcclxuICAgIGxldCAkYSA9IG51bGw7XHJcbiAgICBpZiAodGFyZ2V0Tm9kZU5hbWUgPT09ICdhJykge1xyXG4gICAgICAkYSA9IHRhcmdldDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgICRhID0gJCh0YXJnZXQpLnBhcmVudHMoJ2EnKTtcclxuICAgICAgaWYoJGEubGVuZ3RoKSAkYSA9ICRhWzBdO1xyXG4gICAgfVxyXG4gICAgbGV0IGhyZWYsIHRpdGxlO1xyXG4gICAgaWYoJGEpIHtcclxuICAgICAgaHJlZiA9ICRhLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgICB0aXRsZSA9ICRhLmdldEF0dHJpYnV0ZSgndGl0bGUnKTtcclxuICAgIH1cclxuICAgIGlmKGhyZWYgJiYgJGEuZ2V0QXR0cmlidXRlKCdkYXRhLXR5cGUnKSAhPT0gJ3JlbG9hZCcpIHtcclxuICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBjb25zdCB0YXJnZXRVcmwgPSB1cmxQYXRoRXZhbChsb2NhdGlvbi5ocmVmLCBocmVmKTtcclxuICAgICAgTktDLm1ldGhvZHMucm4uZW1pdCgnb3Blbk5ld1BhZ2UnLCB7XHJcbiAgICAgICAgaHJlZjogdGFyZ2V0VXJsLFxyXG4gICAgICAgIHRpdGxlXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxufSk7XHJcblxyXG4vLyDlkIzmraVjb29raWXkv6Hmga9cclxuTktDLm1ldGhvZHMucm4uZW1pdCgnc3luY1BhZ2VJbmZvJywge3VpZDogTktDLmNvbmZpZ3MudWlkfSk7XHJcbiJdfQ==
