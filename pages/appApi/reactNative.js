(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

NKC.methods.rn = {
  index: 0,
  callback: {}
};

NKC.methods.rn.postMessage = function (obj) {
  window.ReactNativeWebView.postMessage(JSON.stringify(obj));
};

NKC.methods.rn.emit = function (type, data, callback) {
  data = data || {};
  var index = NKC.methods.rn.index++;
  NKC.methods.rn.callback[index] = callback;
  NKC.methods.rn.postMessage({
    type: type,
    data: data,
    webFunctionId: index
  });
};

NKC.methods.rn.onMessage = function (res) {
  var webFunctionId = res.webFunctionId;
  var data = res.data;
  var func = NKC.methods.rn.callback[webFunctionId];

  if (func) {
    func(data);
  }
};

function urlPathEval(fromUrl, toUrl) {
  if (!toUrl) {
    toUrl = fromUrl;
    fromUrl = location.href;
  }

  var fullFromUrl = new URL(fromUrl, location.origin);
  return new URL(toUrl, fullFromUrl).href;
}

document.body.addEventListener('click', function (e) {
  var target = e.target;
  var targetNodeName = target.nodeName.toLowerCase();
  var dataType = target.getAttribute('data-type');
  var src = target.getAttribute('src');
  if (!src) src = target.getAttribute('data-src');

  if (targetNodeName === 'img' && dataType === 'view' && src) {
    src = window.location.origin + src; // 图片处理

    var images = document.querySelectorAll('img[data-type="view"]');
    var urls = [];
    var index;

    for (var i = 0; i < images.length; i++) {
      var image = images[i];
      var name = image.getAttribute('alt');

      var _src = image.getAttribute('src');

      if (!_src) {
        _src = image.getAttribute('data-src');
      }

      if (!_src) return;
      _src = window.location.origin + _src;

      if (_src === src) {
        index = i;
      }

      urls.push({
        url: _src,
        name: name
      });
    }

    NKC.methods.rn.emit('viewImage', {
      urls: urls,
      index: index
    });
    e.preventDefault();
  } else {
    // 链接处理
    var $a = null;

    if (targetNodeName === 'a') {
      $a = target;
    } else {
      $a = $(target).parents('a');
      if ($a.length) $a = $a[0];
    }

    var href, title;

    if ($a) {
      href = $a.getAttribute('href');
      title = $a.getAttribute('title');
    }

    if (href && $a.getAttribute('data-type') !== 'reload') {
      e.preventDefault();
      var targetUrl = urlPathEval(location.href, href);
      NKC.methods.rn.emit('openNewPage', {
        href: targetUrl,
        title: title
      });
    }
  }
}); // 同步cookie信息

NKC.methods.rn.emit('syncPageInfo', {
  uid: NKC.configs.uid
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
