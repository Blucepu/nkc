(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById("data");

var modifyAd = function modifyAd(ad, type) {
  ad.type = type;
};

for (var i = 0; i < data.ads.movable.length; i++) {
  var ad = data.ads.movable[i];
  modifyAd(ad, "movable");
}

for (var _i = 0; _i < data.ads.fixed.length; _i++) {
  var _ad = data.ads.fixed[_i];
  modifyAd(_ad, "fixed");
}

console.log(data);
var app = new Vue({
  el: "#app",
  data: {
    page: {
      id: 'movable',
      name: '轮播图'
    },
    recommendThreads: data.recommendThreads,
    ads: data.ads,
    recommendForums: data.recommendForums,
    columns: data.columns,
    goods: data.goods,
    toppedThreads: data.toppedThreads,
    showShopGoods: data.showGoods ? "t" : "",
    // 首页“最新原创”文章条目显示模式，为空就默认为简略显示
    originalThreadDisplayMode: data.originalThreadDisplayMode,
    updating: false
  },
  mounted: function mounted() {
    window.SelectImage = new NKC.methods.selectImage();
    window.MoveThread = new NKC.modules.MoveThread();
  },
  computed: {
    selectedRecommendForumsId: function selectedRecommendForumsId() {
      return data.recommendForums.map(function (f) {
        return f.fid;
      });
    },
    nav: function nav() {
      var page = this.page;
      var arr = [{
        id: 'other',
        name: '其他'
      }, {
        id: 'movable',
        name: '轮播图'
      }, {
        id: 'fixed',
        name: '固定图'
      }];
      arr.map(function (a) {
        a.active = a.id === page.id;
      });
      return arr;
    }
  },
  methods: {
    checkString: NKC.methods.checkData.checkString,
    checkNumber: NKC.methods.checkData.checkNumber,
    getUrl: NKC.methods.tools.getUrl,
    floatUserInfo: NKC.methods.tools.floatUserInfo,
    visitUrl: NKC.methods.visitUrl,
    removeFromArr: function removeFromArr(arr, index) {
      arr.splice(index, 1);
    },
    moveFromArr: function moveFromArr(arr, index, type) {
      var count = arr.length;
      if (index === 0 && type === 'left') return;
      if (index + 1 === count && type === 'right') return;

      var _index;

      if (type === 'left') {
        _index = index - 1;
      } else {
        _index = index + 1;
      }

      var item = arr[index];
      var _item = arr[_index];
      Vue.set(arr, index, _item);
      Vue.set(arr, _index, item);
    },
    getRecommendTypeName: function getRecommendTypeName(id) {
      return {
        movable: '轮播图',
        fixed: '固定图'
      }[id];
    },
    selectPage: function selectPage(page) {
      this.page = page;
    },
    saveRecommendThreads: function saveRecommendThreads() {
      var page = this.page;
      var options = this.recommendThreads[page.id];
      nkcAPI("/nkc/home", 'PATCH', {
        operation: 'saveRecommendThreads',
        type: page.id,
        options: options
      }).then(function () {
        sweetSuccess('保存成功');
      })["catch"](sweetError);
    },
    updateThreadList: function updateThreadList() {
      var page = this.page;
      this.updating = true;
      var pageId = page.id;
      var self = this;
      nkcAPI('/nkc/home', 'PATCH', {
        operation: 'updateThreadList',
        type: pageId
      }).then(function (data) {
        self.recommendThreads[pageId].automaticallySelectedThreads = data.automaticallySelectedThreads;
        Vue.set(self.saveRecommendThreads);
        sweetSuccess('更新成功');
        self.updating = false;
      })["catch"](function (err) {
        self.updating = false;
      });
    },
    selectLocalFile: function selectLocalFile(ad) {
      var options = {};

      if (ad.type === "movable") {
        options.aspectRatio = 800 / 336;
      } else {
        options.aspectRatio = 400 / 253;
      }

      SelectImage.show(function (data) {
        var formData = new FormData();
        formData.append("cover", data);
        formData.append("topType", ad.type);
        formData.append("tid", ad.tid);
        nkcUploadFile("/nkc/home", "POST", formData).then(function (data) {
          ad.cover = data.coverHash;
        })["catch"](sweetError);
        SelectImage.close();
      }, options);
    },
    move: function move(ad, type) {
      var ads;

      if (ad.type === "movable") {
        ads = this.ads.movable;
      } else {
        ads = this.ads.fixed;
      }

      var index = ads.indexOf(ad);
      if (type === "left" && index === 0 || type === "right" && index + 1 === ads.length) return;
      var newIndex;

      if (type === "left") {
        newIndex = index - 1;
      } else {
        newIndex = index + 1;
      }

      var otherAd = ads[newIndex];
      ads.splice(index, 1, otherAd);
      ads.splice(newIndex, 1, ad);
    },
    saveAds: function saveAds() {
      var _this$ads = this.ads,
          movable = _this$ads.movable,
          fixed = _this$ads.fixed,
          movableOrder = _this$ads.movableOrder,
          fixedOrder = _this$ads.fixedOrder;
      var self = this;
      Promise.resolve().then(function () {
        movable.concat(fixed).map(function (ad) {
          self.checkString(ad.title, {
            name: "标题",
            minLength: 1,
            maxLength: 200
          });
          if (!ad.cover) throw "封面图不能为空";
          if (!ad.tid) throw "文章ID不能为空";
        });
        return nkcAPI("/nkc/home", "PUT", {
          operation: "saveAds",
          movable: movable,
          fixed: fixed,
          movableOrder: movableOrder,
          fixedOrder: fixedOrder
        });
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    },
    remove: function remove(ads, index) {
      ads.splice(index, 1);
      /*sweetQuestion("确定要执行删除操作？")
        .then(() => {
          ads.splice(index, 1)
        })
        .catch(() => {})*/
    },
    addForum: function addForum() {
      var self = this;
      MoveThread.open(function (data) {
        var originForums = data.originForums;
        originForums.map(function (forum) {
          if (!self.selectedRecommendForumsId.includes(forum.fid)) {
            self.recommendForums.push(forum);
          }
        });
        MoveThread.close();
      }, {
        hideMoveType: true
      });
    },
    moveForum: function moveForum(arr, f, type) {
      var index = arr.indexOf(f);
      if (type === "left" && index === 0 || type === "right" && index + 1 === arr.length) return;
      var newIndex;

      if (type === "left") {
        newIndex = index - 1;
      } else {
        newIndex = index + 1;
      }

      var otherAd = arr[newIndex];
      arr.splice(index, 1, otherAd);
      arr.splice(newIndex, 1, f);
    },
    removeForum: function removeForum(arr, index) {
      arr.splice(index, 1);
      /*const self = this;
      sweetQuestion("确定要执行删除操作？")
        .then(() => {
          arr.splice(index, 1);
        })
        .catch(() => {})*/
    },
    saveRecommendForums: function saveRecommendForums() {
      var forumsId = this.recommendForums.map(function (forum) {
        return forum.fid;
      });
      nkcAPI("/nkc/home", "PUT", {
        operation: "saveRecommendForums",
        forumsId: forumsId
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    },
    saveColumns: function saveColumns() {
      var columnsId = this.columns.map(function (c) {
        return c._id;
      });
      nkcAPI("/nkc/home", "PUT", {
        operation: "saveColumns",
        columnsId: columnsId
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    },
    saveGoods: function saveGoods() {
      var goodsId = this.goods.map(function (g) {
        return g.productId;
      });
      var showShopGoods = !!this.showShopGoods;
      nkcAPI("/nkc/home", "PUT", {
        operation: "saveGoods",
        goodsId: goodsId,
        showShopGoods: showShopGoods
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    },
    saveToppedThreads: function saveToppedThreads() {
      var toppedThreadsId = this.toppedThreads.map(function (t) {
        return t.tid;
      });
      nkcAPI("/nkc/home", "PUT", {
        operation: "saveToppedThreads",
        toppedThreadsId: toppedThreadsId
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    },
    saveOriginalThreadDisplayMode: function saveOriginalThreadDisplayMode() {
      var originalThreadDisplayMode = this.originalThreadDisplayMode;
      nkcAPI("/nkc/home", "PATCH", {
        operation: "saveOriginalThreadDisplayMode",
        originalThreadDisplayMode: originalThreadDisplayMode
      }).then(function () {
        sweetSuccess("保存成功");
      })["catch"](sweetError);
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwYWdlcy9ua2MvaG9tZS9ob21lLm1qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7O0FDQUEsSUFBTSxJQUFJLEdBQUcsR0FBRyxDQUFDLE9BQUosQ0FBWSxXQUFaLENBQXdCLE1BQXhCLENBQWI7O0FBQ0EsSUFBTSxRQUFRLEdBQUcsU0FBWCxRQUFXLENBQUMsRUFBRCxFQUFLLElBQUwsRUFBYztBQUM3QixFQUFBLEVBQUUsQ0FBQyxJQUFILEdBQVUsSUFBVjtBQUNELENBRkQ7O0FBSUEsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFaLEVBQWUsQ0FBQyxHQUFHLElBQUksQ0FBQyxHQUFMLENBQVMsT0FBVCxDQUFpQixNQUFwQyxFQUE0QyxDQUFDLEVBQTdDLEVBQWlEO0FBQy9DLE1BQU0sRUFBRSxHQUFHLElBQUksQ0FBQyxHQUFMLENBQVMsT0FBVCxDQUFpQixDQUFqQixDQUFYO0FBQ0EsRUFBQSxRQUFRLENBQUMsRUFBRCxFQUFLLFNBQUwsQ0FBUjtBQUNEOztBQUVELEtBQUksSUFBSSxFQUFDLEdBQUcsQ0FBWixFQUFlLEVBQUMsR0FBRyxJQUFJLENBQUMsR0FBTCxDQUFTLEtBQVQsQ0FBZSxNQUFsQyxFQUEwQyxFQUFDLEVBQTNDLEVBQStDO0FBQzdDLE1BQU0sR0FBRSxHQUFHLElBQUksQ0FBQyxHQUFMLENBQVMsS0FBVCxDQUFlLEVBQWYsQ0FBWDtBQUNBLEVBQUEsUUFBUSxDQUFDLEdBQUQsRUFBSyxPQUFMLENBQVI7QUFDRDs7QUFFRCxPQUFPLENBQUMsR0FBUixDQUFZLElBQVo7QUFFQSxJQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUosQ0FBUTtBQUNsQixFQUFBLEVBQUUsRUFBRSxNQURjO0FBRWxCLEVBQUEsSUFBSSxFQUFFO0FBQ0osSUFBQSxJQUFJLEVBQUU7QUFBQyxNQUFBLEVBQUUsRUFBRSxTQUFMO0FBQWdCLE1BQUEsSUFBSSxFQUFFO0FBQXRCLEtBREY7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b250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBkYXRhID0gTktDLm1ldGhvZHMuZ2V0RGF0YUJ5SWQoXCJkYXRhXCIpO1xyXG5jb25zdCBtb2RpZnlBZCA9IChhZCwgdHlwZSkgPT4ge1xyXG4gIGFkLnR5cGUgPSB0eXBlO1xyXG59O1xyXG5cclxuZm9yKGxldCBpID0gMDsgaSA8IGRhdGEuYWRzLm1vdmFibGUubGVuZ3RoOyBpKyspIHtcclxuICBjb25zdCBhZCA9IGRhdGEuYWRzLm1vdmFibGVbaV07XHJcbiAgbW9kaWZ5QWQoYWQsIFwibW92YWJsZVwiKTtcclxufVxyXG5cclxuZm9yKGxldCBpID0gMDsgaSA8IGRhdGEuYWRzLmZpeGVkLmxlbmd0aDsgaSsrKSB7XHJcbiAgY29uc3QgYWQgPSBkYXRhLmFkcy5maXhlZFtpXTtcclxuICBtb2RpZnlBZChhZCwgXCJmaXhlZFwiKTtcclxufVxyXG5cclxuY29uc29sZS5sb2coZGF0YSk7XHJcblxyXG5jb25zdCBhcHAgPSBuZXcgVnVlKHtcclxuICBlbDogXCIjYXBwXCIsXHJcbiAgZGF0YToge1xyXG4gICAgcGFnZToge2lkOiAnbW92YWJsZScsIG5hbWU6ICfova7mkq3lm74nfSxcclxuICAgIHJlY29tbWVuZFRocmVhZHM6IGRhdGEucmVjb21tZW5kVGhyZWFkcyxcclxuICAgIGFkczogZGF0YS5hZHMsXHJcbiAgICByZWNvbW1lbmRGb3J1bXM6IGRhdGEucmVjb21tZW5kRm9ydW1zLFxyXG4gICAgY29sdW1uczogZGF0YS5jb2x1bW5zLFxyXG4gICAgZ29vZHM6IGRhdGEuZ29vZHMsXHJcbiAgICB0b3BwZWRUaHJlYWRzOiBkYXRhLnRvcHBlZFRocmVhZHMsXHJcbiAgICBzaG93U2hvcEdvb2RzOiAoZGF0YS5zaG93R29vZHM/IFwidFwiOiBcIlwiKSxcclxuICAgIC8vIOmmlumhteKAnOacgOaWsOWOn+WIm+KAneaWh+eroOadoeebruaYvuekuuaooeW8j++8jOS4uuepuuWwsem7mOiupOS4uueugOeVpeaYvuekulxyXG4gICAgb3JpZ2luYWxUaHJlYWREaXNwbGF5TW9kZTogZGF0YS5vcmlnaW5hbFRocmVhZERpc3BsYXlNb2RlLFxyXG5cclxuICAgIHVwZGF0aW5nOiBmYWxzZSxcclxuICB9LFxyXG4gIG1vdW50ZWQoKSB7XHJcbiAgICB3aW5kb3cuU2VsZWN0SW1hZ2UgPSBuZXcgTktDLm1ldGhvZHMuc2VsZWN0SW1hZ2UoKTtcclxuICAgIHdpbmRvdy5Nb3ZlVGhyZWFkID0gbmV3IE5LQy5tb2R1bGVzLk1vdmVUaHJlYWQoKTtcclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICBzZWxlY3RlZFJlY29tbWVuZEZvcnVtc0lkKCkge1xyXG4gICAgICByZXR1cm4gZGF0YS5yZWNvbW1lbmRGb3J1bXMubWFwKGYgPT4gZi5maWQpO1xyXG4gICAgfSxcclxuICAgIG5hdigpIHtcclxuICAgICAgY29uc3Qge3BhZ2V9ID0gdGhpcztcclxuICAgICAgY29uc3QgYXJyID0gW1xyXG4gICAgICAgIHtcclxuICAgICAgICAgIGlkOiAnb3RoZXInLFxyXG4gICAgICAgICAgbmFtZTogJ+WFtuS7lidcclxuICAgICAgICB9LFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGlkOiAnbW92YWJsZScsXHJcbiAgICAgICAgICBuYW1lOiAn6L2u5pKt5Zu+J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgaWQ6ICdmaXhlZCcsXHJcbiAgICAgICAgICBuYW1lOiAn5Zu65a6a5Zu+J1xyXG4gICAgICAgIH1cclxuICAgICAgXTtcclxuICAgICAgYXJyLm1hcChhID0+IHtcclxuICAgICAgICBhLmFjdGl2ZSA9IGEuaWQgPT09IHBhZ2UuaWQ7XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4gYXJyO1xyXG4gICAgfVxyXG4gIH0sXHJcbiAgbWV0aG9kczoge1xyXG4gICAgY2hlY2tTdHJpbmc6IE5LQy5tZXRob2RzLmNoZWNrRGF0YS5jaGVja1N0cmluZyxcclxuICAgIGNoZWNrTnVtYmVyOiBOS0MubWV0aG9kcy5jaGVja0RhdGEuY2hlY2tOdW1iZXIsXHJcbiAgICBnZXRVcmw6IE5LQy5tZXRob2RzLnRvb2xzLmdldFVybCxcclxuICAgIGZsb2F0VXNlckluZm86IE5LQy5tZXRob2RzLnRvb2xzLmZsb2F0VXNlckluZm8sXHJcbiAgICB2aXNpdFVybDogTktDLm1ldGhvZHMudmlzaXRVcmwsXHJcbiAgICByZW1vdmVGcm9tQXJyKGFyciwgaW5kZXgpIHtcclxuICAgICAgYXJyLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICB9LFxyXG4gICAgbW92ZUZyb21BcnIoYXJyLCBpbmRleCwgdHlwZSkge1xyXG4gICAgICBjb25zdCBjb3VudCA9IGFyci5sZW5ndGg7XHJcbiAgICAgIGlmKGluZGV4ID09PSAwICYmIHR5cGUgPT09ICdsZWZ0JykgcmV0dXJuO1xyXG4gICAgICBpZihpbmRleCArIDEgPT09IGNvdW50ICYmIHR5cGUgPT09ICdyaWdodCcpIHJldHVybjtcclxuICAgICAgbGV0IF9pbmRleDtcclxuICAgICAgaWYodHlwZSA9PT0gJ2xlZnQnKSB7XHJcbiAgICAgICAgX2luZGV4ID0gaW5kZXggLSAxO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIF9pbmRleCA9IGluZGV4ICsgMTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBpdGVtID0gYXJyW2luZGV4XTtcclxuICAgICAgY29uc3QgX2l0ZW0gPSBhcnJbX2luZGV4XTtcclxuICAgICAgVnVlLnNldChhcnIsIGluZGV4LCBfaXRlbSk7XHJcbiAgICAgIFZ1ZS5zZXQoYXJyLCBfaW5kZXgsIGl0ZW0pO1xyXG4gICAgfSxcclxuICAgIGdldFJlY29tbWVuZFR5cGVOYW1lKGlkKSB7XHJcbiAgICAgIHJldHVybiB7XHJcbiAgICAgICAgbW92YWJsZTogJ+i9ruaSreWbvicsXHJcbiAgICAgICAgZml4ZWQ6ICflm7rlrprlm74nXHJcbiAgICAgIH1baWRdXHJcbiAgICB9LFxyXG4gICAgc2VsZWN0UGFnZShwYWdlKSB7XHJcbiAgICAgIHRoaXMucGFnZSA9IHBhZ2U7XHJcbiAgICB9LFxyXG4gICAgc2F2ZVJlY29tbWVuZFRocmVhZHMoKSB7XHJcbiAgICAgIGNvbnN0IHtwYWdlfSA9IHRoaXM7XHJcbiAgICAgIGNvbnN0IG9wdGlvbnMgPSB0aGlzLnJlY29tbWVuZFRocmVhZHNbcGFnZS5pZF07XHJcbiAgICAgIG5rY0FQSShgL25rYy9ob21lYCwgJ1BBVENIJywge1xyXG4gICAgICAgIG9wZXJhdGlvbjogJ3NhdmVSZWNvbW1lbmRUaHJlYWRzJyxcclxuICAgICAgICB0eXBlOiBwYWdlLmlkLFxyXG4gICAgICAgIG9wdGlvbnNcclxuICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzd2VldFN1Y2Nlc3MoJ+S/neWtmOaIkOWKnycpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKHN3ZWV0RXJyb3IpO1xyXG4gICAgfSxcclxuICAgIHVwZGF0ZVRocmVhZExpc3QoKSB7XHJcbiAgICAgIGNvbnN0IHtwYWdlfSA9IHRoaXM7XHJcbiAgICAgIHRoaXMudXBkYXRpbmcgPSB0cnVlO1xyXG4gICAgICBjb25zdCBwYWdlSWQgPSBwYWdlLmlkO1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgbmtjQVBJKCcvbmtjL2hvbWUnLCAnUEFUQ0gnLCB7XHJcbiAgICAgICAgb3BlcmF0aW9uOiAndXBkYXRlVGhyZWFkTGlzdCcsXHJcbiAgICAgICAgdHlwZTogcGFnZUlkXHJcbiAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICBzZWxmLnJlY29tbWVuZFRocmVhZHNbcGFnZUlkXS5hdXRvbWF0aWNhbGx5U2VsZWN0ZWRUaHJlYWRzID0gZGF0YS5hdXRvbWF0aWNhbGx5U2VsZWN0ZWRUaHJlYWRzO1xyXG4gICAgICAgICAgVnVlLnNldChzZWxmLnNhdmVSZWNvbW1lbmRUaHJlYWRzKTtcclxuICAgICAgICAgIHN3ZWV0U3VjY2Vzcygn5pu05paw5oiQ5YqfJyk7XHJcbiAgICAgICAgICBzZWxmLnVwZGF0aW5nID0gZmFsc2U7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgIHNlbGYudXBkYXRpbmcgPSBmYWxzZTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBzZWxlY3RMb2NhbEZpbGUoYWQpIHtcclxuICAgICAgY29uc3Qgb3B0aW9ucyA9IHt9O1xyXG4gICAgICBpZihhZC50eXBlID09PSBcIm1vdmFibGVcIikge1xyXG4gICAgICAgIG9wdGlvbnMuYXNwZWN0UmF0aW8gPSA4MDAvMzM2O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG9wdGlvbnMuYXNwZWN0UmF0aW8gPSA0MDAvMjUzO1xyXG4gICAgICB9XHJcbiAgICAgIFNlbGVjdEltYWdlLnNob3coZGF0YSA9PiB7XHJcbiAgICAgICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJjb3ZlclwiLCBkYXRhKTtcclxuICAgICAgICBmb3JtRGF0YS5hcHBlbmQoXCJ0b3BUeXBlXCIsIGFkLnR5cGUpO1xyXG4gICAgICAgIGZvcm1EYXRhLmFwcGVuZChcInRpZFwiLCBhZC50aWQpO1xyXG4gICAgICAgIG5rY1VwbG9hZEZpbGUoXCIvbmtjL2hvbWVcIiwgXCJQT1NUXCIsIGZvcm1EYXRhKVxyXG4gICAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcbiAgICAgICAgICAgIGFkLmNvdmVyID0gZGF0YS5jb3Zlckhhc2g7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLmNhdGNoKHN3ZWV0RXJyb3IpO1xyXG4gICAgICAgIFNlbGVjdEltYWdlLmNsb3NlKCk7XHJcbiAgICAgIH0sIG9wdGlvbnMpO1xyXG4gICAgfSxcclxuICAgIG1vdmUoYWQsIHR5cGUpIHtcclxuICAgICAgbGV0IGFkcztcclxuICAgICAgaWYoYWQudHlwZSA9PT0gXCJtb3ZhYmxlXCIpIHtcclxuICAgICAgICBhZHMgPSB0aGlzLmFkcy5tb3ZhYmxlO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGFkcyA9IHRoaXMuYWRzLmZpeGVkO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IGluZGV4ID0gYWRzLmluZGV4T2YoYWQpO1xyXG4gICAgICBpZigodHlwZSA9PT0gXCJsZWZ0XCIgJiYgaW5kZXggPT09IDApIHx8ICh0eXBlID09PSBcInJpZ2h0XCIgJiYgaW5kZXgrMSA9PT0gYWRzLmxlbmd0aCkpIHJldHVybjtcclxuICAgICAgbGV0IG5ld0luZGV4O1xyXG4gICAgICBpZih0eXBlID09PSBcImxlZnRcIikge1xyXG4gICAgICAgIG5ld0luZGV4ID0gaW5kZXggLSAxO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIG5ld0luZGV4ID0gaW5kZXggKyAxO1xyXG4gICAgICB9XHJcbiAgICAgIGNvbnN0IG90aGVyQWQgPSBhZHNbbmV3SW5kZXhdO1xyXG4gICAgICBhZHMuc3BsaWNlKGluZGV4LCAxLCBvdGhlckFkKTtcclxuICAgICAgYWRzLnNwbGljZShuZXdJbmRleCwgMSwgYWQpO1xyXG4gICAgfSxcclxuICAgIHNhdmVBZHMoKXtcclxuICAgICAgY29uc3Qge21vdmFibGUsIGZpeGVkLCBtb3ZhYmxlT3JkZXIsIGZpeGVkT3JkZXJ9ID0gdGhpcy5hZHM7XHJcbiAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgICBQcm9taXNlLnJlc29sdmUoKVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIG1vdmFibGUuY29uY2F0KGZpeGVkKS5tYXAoYWQgPT4ge1xyXG4gICAgICAgICAgICBzZWxmLmNoZWNrU3RyaW5nKGFkLnRpdGxlLCB7XHJcbiAgICAgICAgICAgICAgbmFtZTogXCLmoIfpophcIixcclxuICAgICAgICAgICAgICBtaW5MZW5ndGg6IDEsXHJcbiAgICAgICAgICAgICAgbWF4TGVuZ3RoOiAyMDBcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIGlmKCFhZC5jb3ZlcikgdGhyb3cgXCLlsIHpnaLlm77kuI3og73kuLrnqbpcIjtcclxuICAgICAgICAgICAgaWYoIWFkLnRpZCkgdGhyb3cgXCLmlofnq6BJROS4jeiDveS4uuepulwiO1xyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgICByZXR1cm4gbmtjQVBJKFwiL25rYy9ob21lXCIsIFwiUFVUXCIsIHtcclxuICAgICAgICAgICAgb3BlcmF0aW9uOiBcInNhdmVBZHNcIixcclxuICAgICAgICAgICAgbW92YWJsZSxcclxuICAgICAgICAgICAgZml4ZWQsXHJcbiAgICAgICAgICAgIG1vdmFibGVPcmRlcixcclxuICAgICAgICAgICAgZml4ZWRPcmRlclxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzd2VldFN1Y2Nlc3MoXCLkv53lrZjmiJDlip9cIik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goc3dlZXRFcnJvcik7XHJcbiAgICB9LFxyXG4gICAgcmVtb3ZlKGFkcywgaW5kZXgpe1xyXG4gICAgICBhZHMuc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgICAvKnN3ZWV0UXVlc3Rpb24oXCLnoa7lrpropoHmiafooYzliKDpmaTmk43kvZzvvJ9cIilcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBhZHMuc3BsaWNlKGluZGV4LCAxKVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKCgpID0+IHt9KSovXHJcblxyXG4gICAgfSxcclxuICAgIGFkZEZvcnVtKCkge1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgTW92ZVRocmVhZC5vcGVuKGRhdGEgPT4ge1xyXG4gICAgICAgIGNvbnN0IHtvcmlnaW5Gb3J1bXN9ID0gZGF0YTtcclxuICAgICAgICBvcmlnaW5Gb3J1bXMubWFwKGZvcnVtID0+IHtcclxuICAgICAgICAgIGlmKCFzZWxmLnNlbGVjdGVkUmVjb21tZW5kRm9ydW1zSWQuaW5jbHVkZXMoZm9ydW0uZmlkKSkge1xyXG4gICAgICAgICAgICBzZWxmLnJlY29tbWVuZEZvcnVtcy5wdXNoKGZvcnVtKVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIE1vdmVUaHJlYWQuY2xvc2UoKTtcclxuICAgICAgfSwge1xyXG4gICAgICAgIGhpZGVNb3ZlVHlwZTogdHJ1ZVxyXG4gICAgICB9KVxyXG4gICAgfSxcclxuICAgIG1vdmVGb3J1bShhcnIsIGYsIHR5cGUpIHtcclxuICAgICAgY29uc3QgaW5kZXggPSBhcnIuaW5kZXhPZihmKTtcclxuICAgICAgaWYoKHR5cGUgPT09IFwibGVmdFwiICYmIGluZGV4ID09PSAwKSB8fCAodHlwZSA9PT0gXCJyaWdodFwiICYmIGluZGV4KzEgPT09IGFyci5sZW5ndGgpKSByZXR1cm47XHJcbiAgICAgIGxldCBuZXdJbmRleDtcclxuICAgICAgaWYodHlwZSA9PT0gXCJsZWZ0XCIpIHtcclxuICAgICAgICBuZXdJbmRleCA9IGluZGV4IC0gMTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBuZXdJbmRleCA9IGluZGV4ICsgMTtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCBvdGhlckFkID0gYXJyW25ld0luZGV4XTtcclxuICAgICAgYXJyLnNwbGljZShpbmRleCwgMSwgb3RoZXJBZCk7XHJcbiAgICAgIGFyci5zcGxpY2UobmV3SW5kZXgsIDEsIGYpO1xyXG4gICAgfSxcclxuICAgIHJlbW92ZUZvcnVtKGFyciwgaW5kZXgpIHtcclxuICAgICAgYXJyLnNwbGljZShpbmRleCwgMSk7XHJcbiAgICAgIC8qY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgIHN3ZWV0UXVlc3Rpb24oXCLnoa7lrpropoHmiafooYzliKDpmaTmk43kvZzvvJ9cIilcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBhcnIuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoKSA9PiB7fSkqL1xyXG4gICAgfSxcclxuICAgIHNhdmVSZWNvbW1lbmRGb3J1bXMoKSB7XHJcbiAgICAgIGNvbnN0IGZvcnVtc0lkID0gdGhpcy5yZWNvbW1lbmRGb3J1bXMubWFwKGZvcnVtID0+IGZvcnVtLmZpZCk7XHJcbiAgICAgIG5rY0FQSShcIi9ua2MvaG9tZVwiLCBcIlBVVFwiLCB7XHJcbiAgICAgICAgb3BlcmF0aW9uOiBcInNhdmVSZWNvbW1lbmRGb3J1bXNcIixcclxuICAgICAgICBmb3J1bXNJZFxyXG4gICAgICB9KVxyXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgc3dlZXRTdWNjZXNzKFwi5L+d5a2Y5oiQ5YqfXCIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKHN3ZWV0RXJyb3IpO1xyXG4gICAgfSxcclxuICAgIHNhdmVDb2x1bW5zKCl7XHJcbiAgICAgIGNvbnN0IGNvbHVtbnNJZCA9IHRoaXMuY29sdW1ucy5tYXAoYyA9PiBjLl9pZCk7XHJcbiAgICAgIG5rY0FQSShcIi9ua2MvaG9tZVwiLCBcIlBVVFwiLCB7XHJcbiAgICAgICAgb3BlcmF0aW9uOiBcInNhdmVDb2x1bW5zXCIsXHJcbiAgICAgICAgY29sdW1uc0lkXHJcbiAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgc3dlZXRTdWNjZXNzKFwi5L+d5a2Y5oiQ5YqfXCIpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKHN3ZWV0RXJyb3IpO1xyXG4gICAgfSxcclxuICAgIHNhdmVHb29kcygpIHtcclxuICAgICAgY29uc3QgZ29vZHNJZCA9IHRoaXMuZ29vZHMubWFwKGcgPT4gZy5wcm9kdWN0SWQpO1xyXG4gICAgICBjb25zdCBzaG93U2hvcEdvb2RzID0gISF0aGlzLnNob3dTaG9wR29vZHM7XHJcbiAgICAgIG5rY0FQSShcIi9ua2MvaG9tZVwiLCBcIlBVVFwiLCB7XHJcbiAgICAgICAgb3BlcmF0aW9uOiBcInNhdmVHb29kc1wiLFxyXG4gICAgICAgIGdvb2RzSWQsXHJcbiAgICAgICAgc2hvd1Nob3BHb29kc1xyXG4gICAgICB9KVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIHN3ZWV0U3VjY2VzcyhcIuS/neWtmOaIkOWKn1wiKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChzd2VldEVycm9yKTtcclxuICAgIH0sXHJcbiAgICBzYXZlVG9wcGVkVGhyZWFkcygpIHtcclxuICAgICAgY29uc3QgdG9wcGVkVGhyZWFkc0lkID0gdGhpcy50b3BwZWRUaHJlYWRzLm1hcCh0ID0+IHQudGlkKTtcclxuICAgICAgbmtjQVBJKFwiL25rYy9ob21lXCIsIFwiUFVUXCIsIHtcclxuICAgICAgICBvcGVyYXRpb246IFwic2F2ZVRvcHBlZFRocmVhZHNcIixcclxuICAgICAgICB0b3BwZWRUaHJlYWRzSWRcclxuICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzd2VldFN1Y2Nlc3MoXCLkv53lrZjmiJDlip9cIik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goc3dlZXRFcnJvcilcclxuICAgIH0sXHJcbiAgICBzYXZlT3JpZ2luYWxUaHJlYWREaXNwbGF5TW9kZSgpIHtcclxuICAgICAgY29uc3Qgb3JpZ2luYWxUaHJlYWREaXNwbGF5TW9kZSA9IHRoaXMub3JpZ2luYWxUaHJlYWREaXNwbGF5TW9kZTtcclxuICAgICAgbmtjQVBJKFwiL25rYy9ob21lXCIsIFwiUEFUQ0hcIiwge1xyXG4gICAgICAgIG9wZXJhdGlvbjogXCJzYXZlT3JpZ2luYWxUaHJlYWREaXNwbGF5TW9kZVwiLFxyXG4gICAgICAgIG9yaWdpbmFsVGhyZWFkRGlzcGxheU1vZGVcclxuICAgICAgfSlcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzd2VldFN1Y2Nlc3MoXCLkv53lrZjmiJDlip9cIik7XHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goc3dlZXRFcnJvcilcclxuICAgIH1cclxuICB9XHJcbn0pO1xyXG4iXX0=
