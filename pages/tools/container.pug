extends ../bootstrap_base

block title
  title=data.toolInfo.name

block content
  .container-fluid.max-width.p-l-0.p-r-0
    iframe.col-xs-12.col-md-12.p-l-0.p-r-0#toolContainer(
      src=`/tools/${data.toolInfo._id}${data.toolInfo.entry}`
      frameborder="0"
      scrolling="no"
      onload="initIFrame()"
      style="width: 100%; overflow: hidden; border: none;"
    )
    style.
      #toolContainer {
        min-height: 1024px;
        min-height: 100vh;
      }

block scripts
  script.
    function initIFrame() {
      var frame = document.getElementById("toolContainer");
      // 劫持和隐藏内部滚动条
      try {
        var doc = frame.contentDocument || frame.contentWindow.document;
        doc.documentElement.style.overflow = 'hidden';
        doc.body.style.overflow = 'hidden';
      } catch (e) {
        console.warn('无法访问 iframe 文档以隐藏滚动条', e);
      }

      // 动态调整高度函数
      function adjustHeight() {
        try {
          var doc = frame.contentDocument || frame.contentWindow.document;
          frame.style.height = doc.body.scrollHeight + 'px';
        } catch (e) {
          console.warn('无法访问 iframe 文档以调整高度', e);
        }
      }
      adjustHeight();
      try {
        var innerDoc = frame.contentDocument || frame.contentWindow.document;
        var observer = new MutationObserver(function(mutations) {
          adjustHeight();
        });
        observer.observe(innerDoc.body, {
          attributes: true,
          childList: true,
          subtree: true
        });
      } catch (e) {
        console.warn('无法访问 iframe 文档以获取高度或隐藏滚动条', e);
      }

      // 劫持所有链接，在新标签打开
      try {
        var innerDoc = frame.contentDocument || frame.contentWindow.document;
        var links = innerDoc.querySelectorAll('a[href]');
        links.forEach(function(a) {
          a.setAttribute('target', '_blank');
          a.setAttribute('rel', 'noopener noreferrer');
        });
      } catch (e) {
        console.warn('无法访问 iframe 文档以劫持链接（可能跨域）', e);
      }
    }
