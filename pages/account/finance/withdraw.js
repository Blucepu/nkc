(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById('data');
var app = new Vue({
  el: "#app",
  data: {
    user: "",
    code: "",
    password: "",
    succeed: false,
    submitted: false,
    timeLimit: 0,
    payment: '',
    info: "",
    succeedMoney: 0,
    error: "",
    withdrawSettings: data.withdrawSettings,
    countToday: data.countToday,
    mainScore: data.mainScore,
    userMainScore: data.userMainScore,
    alipayAccounts: data.alipayAccounts,
    bankAccounts: data.bankAccounts,
    money: "",
    selectedAccount: "",
    to: "alipay" // alipay, bank

  },
  computed: {
    realMoney: function realMoney() {
      return (this.money * (1 - this.withdrawSettings.withdrawFee)).toFixed(2);
    },
    timeBegin: function timeBegin() {
      var timeBegin = this.getHMS(this.withdrawSettings.startingTime, "string");
      return timeBegin.hour + ":" + timeBegin.min + ":" + timeBegin.sec;
    },
    timeEnd: function timeEnd() {
      var timeEnd = this.getHMS(this.withdrawSettings.endTime, "string");
      return timeEnd.hour + ":" + timeEnd.min + ":" + timeEnd.sec;
    },
    outTime: function outTime() {
      var now = new Date();
      var sec = now.getHours() * 60 * 60 * 1000 + now.getMinutes() * 60 * 1000 + now.getSeconds() * 1000;

      if (sec < this.withdrawSettings.withdrawTimeBegin || sec > this.withdrawSettings.withdrawTimeEnd) {
        return true;
      }
    },
    count: function count() {
      return this.withdrawSettings.withdrawCount - this.countToday;
    },
    payments: function payments() {
      var arr = [];
      var _this$withdrawSetting = this.withdrawSettings,
          weChat = _this$withdrawSetting.weChat,
          aliPay = _this$withdrawSetting.aliPay;
      if (aliPay.enabled) arr.push({
        type: 'aliPay',
        name: '支付宝'
      });
      if (weChat.enabled) arr.push({
        type: 'weChat',
        name: '微信支付'
      });
      return arr;
    },
    payInfo: function payInfo() {
      var payment = this.payment,
          withdrawSettings = this.withdrawSettings;
      if (!payment) return;
      var pay = withdrawSettings[payment];

      if (pay.enabled && pay.fee > 0) {
        var fee = Number((pay.fee * 100).toFixed(4));
        return "\u670D\u52A1\u5546\uFF08\u975E\u672C\u7AD9\uFF09\u5C06\u6536\u53D6 ".concat(fee, "% \u7684\u624B\u7EED\u8D39");
      }
    },
    fee: function fee() {
      var totalPrice = this.totalPrice,
          money = this.money;
      return Number((money - totalPrice).toFixed(2));
    },
    totalPrice: function totalPrice() {
      var withdrawSettings = this.withdrawSettings,
          money = this.money,
          payment = this.payment;
      var fee = withdrawSettings[payment].fee;

      if (fee) {
        money = money * (1 - fee);
      } else {
        money;
      }

      return Number(money.toFixed(2));
    }
  },
  mounted: function mounted() {
    for (var i = 0; i < this.alipayAccounts.length; i++) {
      var alipay = this.alipayAccounts[i];

      if (alipay["default"]) {
        this.selectedAccount = alipay;
        break;
      }
    }

    if (this.payments.length) {
      this.selectPayment(this.payments[0].type);
    }
  },
  methods: {
    selectAccount: function selectAccount(account) {
      this.selectedAccount = account;
    },
    selectPayment: function selectPayment(t) {
      this.payment = t;
    },
    getHMS: function getHMS(t, type) {
      var hour = Math.floor(t / 3600000);
      var min = Math.floor(t / 60000) % 60;
      var sec = Math.floor(t / 1000) % 60;

      if (type === "string") {
        if (hour < 10) hour = "0" + hour;
        if (min < 10) min = "0" + min;
        if (sec < 10) sec = "0" + sec;
      }

      return {
        hour: hour,
        min: min,
        sec: sec
      };
    },
    countdown: function countdown() {
      if (app.timeLimit <= 0) return;
      app.timeLimit--;
      setTimeout(function () {
        app.countdown();
      }, 1000);
    },
    sendMessage: function sendMessage() {
      nkcAPI("/sendMessage/withdraw", "POST", {}).then(function () {
        app.timeLimit = 120;
        app.countdown();
        screenTopAlert("短信验证码发送成功");
      })["catch"](function (err) {
        sweetError(err);
      });
    },
    submit: function submit() {
      this.error = "";
      this.info = "";
      var self = this;
      var money = this.money,
          password = this.password,
          totalPrice = this.totalPrice,
          code = this.code,
          payment = this.payment,
          selectedAccount = this.selectedAccount;
      Promise.resolve().then(function () {
        if (money > 0) {} else {
          throw '提现金额不正确';
        }

        if (!['aliPay', 'weChat'].includes(payment)) throw '请选择付款方式';
        if (!code) throw '请输入短信验证码';
        if (!password) throw '请输入登录密码';
        self.submitted = true;
        return nkcAPI("/account/finance/withdraw", 'POST', {
          money: totalPrice,
          score: money,
          password: password,
          code: code,
          account: selectedAccount,
          to: payment
        });
      }).then(function () {
        self.submitted = false;
        self.password = '';
        self.money = '';
        return sweetSuccess('提现成功');
      })["catch"](function (err) {
        sweetError(err);
        self.submitted = false;
      });
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
