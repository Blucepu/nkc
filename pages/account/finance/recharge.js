(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById('data');
var math = NKC.modules.math;
var defaultKCB = [10, 20, 50, 100, 500, 1000, 5000];
var app = new Vue({
  el: '#app',
  data: {
    defaultKCB: defaultKCB.filter(function (d) {
      return d >= data.rechargeSettings.min / 100 && d <= data.rechargeSettings.max / 100;
    }),
    money: 10,
    error: '',
    payment: '',
    input: '',
    mainScore: data.mainScore,
    rechargeSettings: data.rechargeSettings
  },
  computed: {
    payments: function payments() {
      var arr = [];
      var _this$rechargeSetting = this.rechargeSettings,
          weChat = _this$rechargeSetting.weChat,
          aliPay = _this$rechargeSetting.aliPay;
      if (aliPay.enabled) arr.push({
        type: 'aliPay',
        name: '支付宝'
      });
      if (weChat.enabled) arr.push({
        type: 'weChat',
        name: '微信支付'
      });
      return arr;
    },
    payInfo: function payInfo() {
      var payment = this.payment,
          rechargeSettings = this.rechargeSettings;
      if (!payment) return;
      var pay = rechargeSettings[payment];

      if (pay.enabled && pay.fee > 0) {
        var fee = math.chain(math.bignumber(pay.fee)).multiply(100).done().toNumber();
        return "\u670D\u52A1\u5546\uFF08\u975E\u672C\u7AD9\uFF09\u5C06\u6536\u53D6 ".concat(fee, "% \u7684\u624B\u7EED\u8D39");
      }
    },
    fee: function fee() {
      var totalPrice = this.totalPrice,
          finalPrice = this.finalPrice;

      if (totalPrice) {
        return Number((totalPrice - finalPrice).toFixed(2));
      }
    },
    finalPrice: function finalPrice() {
      var money = this.money,
          input = this.input;
      var m = input;

      if (money !== '') {
        m = money;
      }

      if (m) {
        m = m.toFixed(2);
        return Number(m);
      }
    },
    totalPrice: function totalPrice() {
      var payment = this.payment,
          rechargeSettings = this.rechargeSettings;
      var pay = rechargeSettings[payment];

      if (pay) {
        if (this.finalPrice) {
          var fee = this.finalPrice / (1 - pay.fee);
          fee = fee.toFixed(2);
          return Number(fee);
        }
      }
    }
  },
  mounted: function mounted() {
    if (this.payments.length) {
      this.selectPayment(this.payments[0].type);
    }
  },
  methods: {
    select: function select(m) {
      this.money = m;
    },
    selectPayment: function selectPayment(t) {
      this.payment = t;
    },
    pay: function pay() {
      var totalPrice = this.totalPrice,
          payment = this.payment,
          finalPrice = this.finalPrice;
      var newWindow;
      Promise.resolve().then(function () {
        if (!['aliPay', 'weChat'].includes(payment)) throw '请选择支付方式';

        if (totalPrice > 0) {} else {
          throw '充值金额必须大于0';
        }

        if (NKC.configs.platform !== 'reactNative') {
          newWindow = window.open();
        }

        return nkcAPI("/account/finance/recharge?type=get_url&money=".concat(totalPrice, "&score=").concat(finalPrice, "&payment=").concat(payment), 'GET');
      }).then(function (data) {
        if (NKC.configs.platform === 'reactNative') {
          NKC.methods.visitUrl(data.url, true);
        } else {
          newWindow.location = data.url;
        }

        sweetInfo('请在浏览器新打开的窗口完成支付！若没有新窗口打开，请检查新窗口是否已被浏览器拦截。');
      })["catch"](function (err) {
        sweetError(err);

        if (newWindow) {
          newWindow.document.body.innerHTML = err.error || err;
        }
      });
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
