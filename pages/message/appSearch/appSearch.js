(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById('data');
var app = new Vue({
  el: "#app",
  data: {
    content: '',
    users: [],
    friendsUid: data.friendsUid,
    page: 0,
    pageCount: 999999,
    end: false,
    status: 'unSearch' // unSearch, searching

  },
  methods: {
    getUrl: NKC.methods.tools.getUrl,
    toast: NKC.methods.appToast,
    checkContent: function checkContent() {
      var self = this;
      return new Promise(function (resolve, reject) {
        if (!self.content) {
          reject('请输入内容');
        } else {
          resolve(self.content);
        }
      });
    },
    resetStatus: function resetStatus() {
      this.status = 'unSearch';
    },
    getUser: function getUser() {
      var self = this;
      var page = this.page,
          content = this.content;
      if (self.status === 'searching') return;
      self.status = 'searching';
      return Promise.resolve().then(function () {
        return nkcAPI("/message/search?uid=".concat(content, "&username=").concat(content, "&page=").concat(page, "&t=").concat(Date.now()), 'GET');
      }).then(function (data) {
        var _data$paging = data.paging,
            page = _data$paging.page,
            pageCount = _data$paging.pageCount;
        self.page = page;
        self.pageCount = pageCount;
        self.users = self.users.concat(data.users);
        if (page + 1 >= pageCount) self.end = true;
        self.resetStatus();
      });
    },
    search: function search() {
      var self = this;
      self.checkContent().then(function () {
        self.page = 0;
        self.end = false;
        self.users = [];
        self.pageCount = 999999;
        return self.getUser();
      })["catch"](function (data) {
        self.resetStatus();
        self.toast(data);
      });
    },
    loadMore: function loadMore() {
      var self = this;
      self.checkContent().then(function () {
        if (self.page + 1 >= self.pageCount) throw '到底了';
        self.page += 1;
        return self.getUser();
      })["catch"](function (data) {
        self.resetStatus();
        self.toast(data);
      });
    },
    toSendMessage: function toSendMessage(u) {
      NKC.methods.toChat(u.uid);
    },
    addFriend: function addFriend(u) {
      NKC.methods.visitUrl("/message/addFriend?uid=".concat(u.uid), true);
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9fYnJvd3Nlci1wYWNrQDYuMS4wQGJyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInBhZ2VzL21lc3NhZ2UvYXBwU2VhcmNoL2FwcFNlYXJjaC5tanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixNQUF4QixDQUFiO0FBQ0EsSUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFKLENBQVE7QUFDbEIsRUFBQSxFQUFFLEVBQUUsTUFEYztBQUVsQixFQUFBLElBQUksRUFBRTtBQUNKLElBQUEsT0FBTyxFQUFFLEVBREw7QUFFSixJQUFBLEtBQUssRUFBRSxFQUZIO0FBR0osSUFBQSxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBSGI7QUFJSixJQUFBLElBQUksRUFBRSxDQUpGO0FBS0osSUFBQSxTQUFTLEVBQUUsTUFMUDtBQU1KLElBQUEsR0FBRyxFQUFFLEtBTkQ7QUFPSixJQUFBLE1BQU0sRUFBRSxVQVBKLENBT2dCOztBQVBoQixHQUZZO0FBV2xCLEVBQUEsT0FBTyxFQUFFO0FBQ1AsSUFBQSxNQUFNLEVBQUUsR0FBRyxDQUFDLE9BQUosQ0FBWSxLQUFaLENBQWtCLE1BRG5CO0FBRVAsSUFBQSxLQUFLLEVBQUUsR0FBRyxDQUFDLE9BQUosQ0FBWSxRQUZaO0FBR1AsSUFBQSxZQUhPLDBCQUdRO0FBQ2IsVUFBTSxJQUFJLEdBQUcsSUFBYjtBQUNBLGFBQU8sSUFBSSxPQUFKLENBQWEsVUFBQyxPQUFELEVBQVUsTUFBVixFQUFxQjtBQUN2QyxZQUFHLENBQUMsSUFBSSxDQUFDLE9BQVQsRUFBa0I7QUFDaEIsVUFBQSxNQUFNLENBQUMsT0FBRCxDQUFOO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsVUFBQSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU4sQ0FBUDtBQUNEO0FBQ0YsT0FOTSxDQUFQO0FBT0QsS0FaTTtBQWFQLElBQUEsV0FiTyx5QkFhTztBQUNaLFdBQUssTUFBTCxHQUFjLFVBQWQ7QUFDRCxLQWZNO0FBZ0JQLElBQUEsT0FoQk8scUJBZ0JHO0FBQ1IsVUFBTSxJQUFJLEdBQUcsSUFBYjtBQURRLFVBRUQsSUFGQyxHQUVnQixJQUZoQixDQUVELElBRkM7QUFBQSxVQUVLLE9BRkwsR0FFZ0IsSUFGaEIsQ0FFSyxPQUZMO0FBR1IsVUFBRyxJQUFJLENBQUMsTUFBTCxLQUFnQixXQUFuQixFQUFnQztBQUNoQyxNQUFBLElBQUksQ0FBQyxNQUFMLEdBQWMsV0FBZDtBQUNBLGFBQU8sT0FBTyxDQUFDLE9BQVIsR0FDSixJQURJLENBQ0MsWUFBTTtBQUNWLGVBQU8sTUFBTSwrQkFBd0IsT0FBeEIsdUJBQTRDLE9BQTVDLG1CQUE0RCxJQUE1RCxnQkFBc0UsSUFBSSxDQUFDLEdBQUwsRUFBdEUsR0FBb0YsS0FBcEYsQ0FBYjtBQUNELE9BSEksRUFJSixJQUpJLENBSUMsVUFBQSxJQUFJLEVBQUk7QUFBQSwyQkFDYyxJQUFJLENBQUMsTUFEbkI7QUFBQSxZQUNMLElBREssZ0JBQ0wsSUFESztBQUFBLFlBQ0MsU0FERCxnQkFDQyxTQUREO0FBRVosUUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLElBQVo7QUFDQSxRQUFBLElBQUksQ0FBQyxTQUFMLEdBQWlCLFNBQWpCO0FBQ0EsUUFBQSxJQUFJLENBQUMsS0FBTCxHQUFhLElBQUksQ0FBQyxLQUFMLENBQVcsTUFBWCxDQUFrQixJQUFJLENBQUMsS0FBdkIsQ0FBYjtBQUNBLFlBQUcsSUFBSSxHQUFHLENBQVAsSUFBWSxTQUFmLEVBQTBCLElBQUksQ0FBQyxHQUFMLEdBQVcsSUFBWDtBQUMxQixRQUFBLElBQUksQ0FBQyxXQUFMO0FBQ0QsT0FYSSxDQUFQO0FBYUQsS0FsQ007QUFtQ1AsSUFBQSxNQW5DTyxvQkFtQ0U7QUFDUCxVQUFNLElBQUksR0FBRyxJQUFiO0FBQ0EsTUFBQSxJQUFJLENBQUMsWUFBTCxHQUNHLElBREgsQ0FDUSxZQUFNO0FBQ1YsUUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLENBQVo7QUFDQSxRQUFBLElBQUksQ0FBQyxHQUFMLEdBQVcsS0FBWDtBQUNBLFFBQUEsSUFBSSxDQUFDLEtBQUwsR0FBYSxFQUFiO0FBQ0EsUUFBQSxJQUFJLENBQUMsU0FBTCxHQUFpQixNQUFqQjtBQUNBLGVBQU8sSUFBSSxDQUFDLE9BQUwsRUFBUDtBQUNELE9BUEgsV0FRUyxVQUFBLElBQUksRUFBSTtBQUNiLFFBQUEsSUFBSSxDQUFDLFdBQUw7QUFDQSxRQUFBLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBWDtBQUNELE9BWEg7QUFZRCxLQWpETTtBQWtEUCxJQUFBLFFBbERPLHNCQWtESTtBQUNULFVBQU0sSUFBSSxHQUFHLElBQWI7QUFDQSxNQUFBLElBQUksQ0FBQyxZQUFMLEdBQ0csSUFESCxDQUNRLFlBQU07QUFDVixZQUFHLElBQUksQ0FBQyxJQUFMLEdBQVksQ0FBWixJQUFpQixJQUFJLENBQUMsU0FBekIsRUFBb0MsTUFBTSxLQUFOO0FBQ3BDLFFBQUEsSUFBSSxDQUFDLElBQUwsSUFBYSxDQUFiO0FBQ0EsZUFBTyxJQUFJLENBQUMsT0FBTCxFQUFQO0FBQ0QsT0FMSCxXQU1TLFVBQUMsSUFBRCxFQUFVO0FBQ2YsUUFBQSxJQUFJLENBQUMsV0FBTDtBQUNBLFFBQUEsSUFBSSxDQUFDLEtBQUwsQ0FBVyxJQUFYO0FBQ0QsT0FUSDtBQVVELEtBOURNO0FBK0RQLElBQUEsYUEvRE8seUJBK0RPLENBL0RQLEVBK0RVO0FBQ2YsTUFBQSxHQUFHLENBQUMsT0FBSixDQUFZLE1BQVosQ0FBbUIsQ0FBQyxDQUFDLEdBQXJCO0FBQ0QsS0FqRU07QUFrRVAsSUFBQSxTQWxFTyxxQkFrRUcsQ0FsRUgsRUFrRU07QUFDWCxNQUFBLEdBQUcsQ0FBQyxPQUFKLENBQVksUUFBWixrQ0FBK0MsQ0FBQyxDQUFDLEdBQWpELEdBQXdELElBQXhEO0FBQ0Q7QUFwRU07QUFYUyxDQUFSLENBQVoiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBkYXRhID0gTktDLm1ldGhvZHMuZ2V0RGF0YUJ5SWQoJ2RhdGEnKTtcclxuY29uc3QgYXBwID0gbmV3IFZ1ZSh7XHJcbiAgZWw6IFwiI2FwcFwiLFxyXG4gIGRhdGE6IHtcclxuICAgIGNvbnRlbnQ6ICcnLFxyXG4gICAgdXNlcnM6IFtdLFxyXG4gICAgZnJpZW5kc1VpZDogZGF0YS5mcmllbmRzVWlkLFxyXG4gICAgcGFnZTogMCxcclxuICAgIHBhZ2VDb3VudDogOTk5OTk5LFxyXG4gICAgZW5kOiBmYWxzZSxcclxuICAgIHN0YXR1czogJ3VuU2VhcmNoJywgLy8gdW5TZWFyY2gsIHNlYXJjaGluZ1xyXG4gIH0sXHJcbiAgbWV0aG9kczoge1xyXG4gICAgZ2V0VXJsOiBOS0MubWV0aG9kcy50b29scy5nZXRVcmwsXHJcbiAgICB0b2FzdDogTktDLm1ldGhvZHMuYXBwVG9hc3QsXHJcbiAgICBjaGVja0NvbnRlbnQoKSB7XHJcbiAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgICByZXR1cm4gbmV3IFByb21pc2UoKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICBpZighc2VsZi5jb250ZW50KSB7XHJcbiAgICAgICAgICByZWplY3QoJ+ivt+i+k+WFpeWGheWuuScpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICByZXNvbHZlKHNlbGYuY29udGVudCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KSk7XHJcbiAgICB9LFxyXG4gICAgcmVzZXRTdGF0dXMoKSB7XHJcbiAgICAgIHRoaXMuc3RhdHVzID0gJ3VuU2VhcmNoJztcclxuICAgIH0sXHJcbiAgICBnZXRVc2VyKCkge1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgY29uc3Qge3BhZ2UsIGNvbnRlbnR9ID0gdGhpcztcclxuICAgICAgaWYoc2VsZi5zdGF0dXMgPT09ICdzZWFyY2hpbmcnKSByZXR1cm47XHJcbiAgICAgIHNlbGYuc3RhdHVzID0gJ3NlYXJjaGluZyc7XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoKVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIHJldHVybiBua2NBUEkoYC9tZXNzYWdlL3NlYXJjaD91aWQ9JHtjb250ZW50fSZ1c2VybmFtZT0ke2NvbnRlbnR9JnBhZ2U9JHtwYWdlfSZ0PSR7RGF0ZS5ub3coKX1gLCAnR0VUJylcclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgY29uc3Qge3BhZ2UsIHBhZ2VDb3VudH0gPSBkYXRhLnBhZ2luZztcclxuICAgICAgICAgIHNlbGYucGFnZSA9IHBhZ2U7XHJcbiAgICAgICAgICBzZWxmLnBhZ2VDb3VudCA9IHBhZ2VDb3VudDtcclxuICAgICAgICAgIHNlbGYudXNlcnMgPSBzZWxmLnVzZXJzLmNvbmNhdChkYXRhLnVzZXJzKTtcclxuICAgICAgICAgIGlmKHBhZ2UgKyAxID49IHBhZ2VDb3VudCkgc2VsZi5lbmQgPSB0cnVlO1xyXG4gICAgICAgICAgc2VsZi5yZXNldFN0YXR1cygpO1xyXG4gICAgICAgIH0pXHJcblxyXG4gICAgfSxcclxuICAgIHNlYXJjaCgpIHtcclxuICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgIHNlbGYuY2hlY2tDb250ZW50KClcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBzZWxmLnBhZ2UgPSAwO1xyXG4gICAgICAgICAgc2VsZi5lbmQgPSBmYWxzZTtcclxuICAgICAgICAgIHNlbGYudXNlcnMgPSBbXTtcclxuICAgICAgICAgIHNlbGYucGFnZUNvdW50ID0gOTk5OTk5O1xyXG4gICAgICAgICAgcmV0dXJuIHNlbGYuZ2V0VXNlcigpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKGRhdGEgPT4ge1xyXG4gICAgICAgICAgc2VsZi5yZXNldFN0YXR1cygpO1xyXG4gICAgICAgICAgc2VsZi50b2FzdChkYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBsb2FkTW9yZSgpIHtcclxuICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgIHNlbGYuY2hlY2tDb250ZW50KClcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICBpZihzZWxmLnBhZ2UgKyAxID49IHNlbGYucGFnZUNvdW50KSB0aHJvdyAn5Yiw5bqV5LqGJztcclxuICAgICAgICAgIHNlbGYucGFnZSArPSAxO1xyXG4gICAgICAgICAgcmV0dXJuIHNlbGYuZ2V0VXNlcigpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICBzZWxmLnJlc2V0U3RhdHVzKCk7XHJcbiAgICAgICAgICBzZWxmLnRvYXN0KGRhdGEpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIHRvU2VuZE1lc3NhZ2UodSkge1xyXG4gICAgICBOS0MubWV0aG9kcy50b0NoYXQodS51aWQpO1xyXG4gICAgfSxcclxuICAgIGFkZEZyaWVuZCh1KSB7XHJcbiAgICAgIE5LQy5tZXRob2RzLnZpc2l0VXJsKGAvbWVzc2FnZS9hZGRGcmllbmQ/dWlkPSR7dS51aWR9YCwgdHJ1ZSk7XHJcbiAgICB9XHJcbiAgfVxyXG59KVxyXG4iXX0=
