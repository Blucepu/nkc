(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById('data');
var app = new Vue({
  el: "#app",
  data: {
    content: '',
    users: [],
    friendsUid: data.friendsUid,
    page: 0,
    pageCount: 999999,
    end: false,
    status: 'unSearch' // unSearch, searching

  },
  methods: {
    getUrl: NKC.methods.tools.getUrl,
    toast: NKC.methods.appToast,
    checkContent: function checkContent() {
      var self = this;
      return new Promise(function (resolve, reject) {
        if (!self.content) {
          reject('请输入内容');
        } else {
          resolve(self.content);
        }
      });
    },
    resetStatus: function resetStatus() {
      this.status = 'unSearch';
    },
    getUser: function getUser() {
      var self = this;
      var page = this.page,
          content = this.content;
      if (self.status === 'searching') return;
      self.status = 'searching';
      return Promise.resolve().then(function () {
        return nkcAPI("/message/search?uid=".concat(content, "&username=").concat(content, "&page=").concat(page, "&t=").concat(Date.now()), 'GET');
      }).then(function (data) {
        var _data$paging = data.paging,
            page = _data$paging.page,
            pageCount = _data$paging.pageCount;
        self.page = page;
        self.pageCount = pageCount;
        self.users = self.users.concat(data.users);
        if (page + 1 >= pageCount) self.end = true;
        self.resetStatus();
      });
    },
    search: function search() {
      var self = this;
      self.checkContent().then(function () {
        self.page = 0;
        self.end = false;
        self.pageCount = 999999;
        return self.getUser();
      })["catch"](function (data) {
        self.resetStatus();
        self.toast(data);
      });
    },
    loadMore: function loadMore() {
      var self = this;
      self.checkContent().then(function () {
        if (self.page + 1 >= self.pageCount) throw '到底了';
        self.page += 1;
        return self.getUser();
      })["catch"](function (data) {
        self.resetStatus();
        self.toast(data);
      });
    },
    toSendMessage: function toSendMessage(u) {
      NKC.methods.toChat(u.uid);
    }
  },
  mounted: function mounted() {
    this.content = '我';
    this.search();
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9fYnJvd3Nlci1wYWNrQDYuMS4wQGJyb3dzZXItcGFjay9fcHJlbHVkZS5qcyIsInBhZ2VzL21lc3NhZ2UvYXBwU2VhcmNoL2FwcFNlYXJjaC5tanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixNQUF4QixDQUFiO0FBQ0EsSUFBTSxHQUFHLEdBQUcsSUFBSSxHQUFKLENBQVE7QUFDbEIsRUFBQSxFQUFFLEVBQUUsTUFEYztBQUVsQixFQUFBLElBQUksRUFBRTtBQUNKLElBQUEsT0FBTyxFQUFFLEVBREw7QUFFSixJQUFBLEtBQUssRUFBRSxFQUZIO0FBR0osSUFBQSxVQUFVLEVBQUUsSUFBSSxDQUFDLFVBSGI7QUFJSixJQUFBLElBQUksRUFBRSxDQUpGO0FBS0osSUFBQSxTQUFTLEVBQUUsTUFMUDtBQU1KLElBQUEsR0FBRyxFQUFFLEtBTkQ7QUFPSixJQUFBLE1BQU0sRUFBRSxVQVBKLENBT2dCOztBQVBoQixHQUZZO0FBV2xCLEVBQUEsT0FBTyxFQUFFO0FBQ1AsSUFBQSxNQUFNLEVBQUUsR0FBRyxDQUFDLE9BQUosQ0FBWSxLQUFaLENBQWtCLE1BRG5CO0FBRVAsSUFBQSxLQUFLLEVBQUUsR0FBRyxDQUFDLE9BQUosQ0FBWSxRQUZaO0FBR1AsSUFBQSxZQUhPLDBCQUdRO0FBQ2IsVUFBTSxJQUFJLEdBQUcsSUFBYjtBQUNBLGFBQU8sSUFBSSxPQUFKLENBQWEsVUFBQyxPQUFELEVBQVUsTUFBVixFQUFxQjtBQUN2QyxZQUFHLENBQUMsSUFBSSxDQUFDLE9BQVQsRUFBa0I7QUFDaEIsVUFBQSxNQUFNLENBQUMsT0FBRCxDQUFOO0FBQ0QsU0FGRCxNQUVPO0FBQ0wsVUFBQSxPQUFPLENBQUMsSUFBSSxDQUFDLE9BQU4sQ0FBUDtBQUNEO0FBQ0YsT0FOTSxDQUFQO0FBT0QsS0FaTTtBQWFQLElBQUEsV0FiTyx5QkFhTztBQUNaLFdBQUssTUFBTCxHQUFjLFVBQWQ7QUFDRCxLQWZNO0FBZ0JQLElBQUEsT0FoQk8scUJBZ0JHO0FBQ1IsVUFBTSxJQUFJLEdBQUcsSUFBYjtBQURRLFVBRUQsSUFGQyxHQUVnQixJQUZoQixDQUVELElBRkM7QUFBQSxVQUVLLE9BRkwsR0FFZ0IsSUFGaEIsQ0FFSyxPQUZMO0FBR1IsVUFBRyxJQUFJLENBQUMsTUFBTCxLQUFnQixXQUFuQixFQUFnQztBQUNoQyxNQUFBLElBQUksQ0FBQyxNQUFMLEdBQWMsV0FBZDtBQUNBLGFBQU8sT0FBTyxDQUFDLE9BQVIsR0FDSixJQURJLENBQ0MsWUFBTTtBQUNWLGVBQU8sTUFBTSwrQkFBd0IsT0FBeEIsdUJBQTRDLE9BQTVDLG1CQUE0RCxJQUE1RCxnQkFBc0UsSUFBSSxDQUFDLEdBQUwsRUFBdEUsR0FBb0YsS0FBcEYsQ0FBYjtBQUNELE9BSEksRUFJSixJQUpJLENBSUMsVUFBQSxJQUFJLEVBQUk7QUFBQSwyQkFDYyxJQUFJLENBQUMsTUFEbkI7QUFBQSxZQUNMLElBREssZ0JBQ0wsSUFESztBQUFBLFlBQ0MsU0FERCxnQkFDQyxTQUREO0FBRVosUUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLElBQVo7QUFDQSxRQUFBLElBQUksQ0FBQyxTQUFMLEdBQWlCLFNBQWpCO0FBQ0EsUUFBQSxJQUFJLENBQUMsS0FBTCxHQUFhLElBQUksQ0FBQyxLQUFMLENBQVcsTUFBWCxDQUFrQixJQUFJLENBQUMsS0FBdkIsQ0FBYjtBQUNBLFlBQUcsSUFBSSxHQUFHLENBQVAsSUFBWSxTQUFmLEVBQTBCLElBQUksQ0FBQyxHQUFMLEdBQVcsSUFBWDtBQUMxQixRQUFBLElBQUksQ0FBQyxXQUFMO0FBQ0QsT0FYSSxDQUFQO0FBYUQsS0FsQ007QUFtQ1AsSUFBQSxNQW5DTyxvQkFtQ0U7QUFDUCxVQUFNLElBQUksR0FBRyxJQUFiO0FBQ0EsTUFBQSxJQUFJLENBQUMsWUFBTCxHQUNHLElBREgsQ0FDUSxZQUFNO0FBQ1YsUUFBQSxJQUFJLENBQUMsSUFBTCxHQUFZLENBQVo7QUFDQSxRQUFBLElBQUksQ0FBQyxHQUFMLEdBQVcsS0FBWDtBQUNBLFFBQUEsSUFBSSxDQUFDLFNBQUwsR0FBaUIsTUFBakI7QUFDQSxlQUFPLElBQUksQ0FBQyxPQUFMLEVBQVA7QUFDRCxPQU5ILFdBT1MsVUFBQSxJQUFJLEVBQUk7QUFDYixRQUFBLElBQUksQ0FBQyxXQUFMO0FBQ0EsUUFBQSxJQUFJLENBQUMsS0FBTCxDQUFXLElBQVg7QUFDRCxPQVZIO0FBV0QsS0FoRE07QUFpRFAsSUFBQSxRQWpETyxzQkFpREk7QUFDVCxVQUFNLElBQUksR0FBRyxJQUFiO0FBQ0EsTUFBQSxJQUFJLENBQUMsWUFBTCxHQUNHLElBREgsQ0FDUSxZQUFNO0FBQ1YsWUFBRyxJQUFJLENBQUMsSUFBTCxHQUFZLENBQVosSUFBaUIsSUFBSSxDQUFDLFNBQXpCLEVBQW9DLE1BQU0sS0FBTjtBQUNwQyxRQUFBLElBQUksQ0FBQyxJQUFMLElBQWEsQ0FBYjtBQUNBLGVBQU8sSUFBSSxDQUFDLE9BQUwsRUFBUDtBQUNELE9BTEgsV0FNUyxVQUFDLElBQUQsRUFBVTtBQUNmLFFBQUEsSUFBSSxDQUFDLFdBQUw7QUFDQSxRQUFBLElBQUksQ0FBQyxLQUFMLENBQVcsSUFBWDtBQUNELE9BVEg7QUFVRCxLQTdETTtBQThEUCxJQUFBLGFBOURPLHlCQThETyxDQTlEUCxFQThEVTtBQUNmLE1BQUEsR0FBRyxDQUFDLE9BQUosQ0FBWSxNQUFaLENBQW1CLENBQUMsQ0FBQyxHQUFyQjtBQUNEO0FBaEVNLEdBWFM7QUE2RWxCLEVBQUEsT0E3RWtCLHFCQTZFUjtBQUNSLFNBQUssT0FBTCxHQUFlLEdBQWY7QUFDQSxTQUFLLE1BQUw7QUFDRDtBQWhGaUIsQ0FBUixDQUFaIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiY29uc3QgZGF0YSA9IE5LQy5tZXRob2RzLmdldERhdGFCeUlkKCdkYXRhJyk7XHJcbmNvbnN0IGFwcCA9IG5ldyBWdWUoe1xyXG4gIGVsOiBcIiNhcHBcIixcclxuICBkYXRhOiB7XHJcbiAgICBjb250ZW50OiAnJyxcclxuICAgIHVzZXJzOiBbXSxcclxuICAgIGZyaWVuZHNVaWQ6IGRhdGEuZnJpZW5kc1VpZCxcclxuICAgIHBhZ2U6IDAsXHJcbiAgICBwYWdlQ291bnQ6IDk5OTk5OSxcclxuICAgIGVuZDogZmFsc2UsXHJcbiAgICBzdGF0dXM6ICd1blNlYXJjaCcsIC8vIHVuU2VhcmNoLCBzZWFyY2hpbmdcclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIGdldFVybDogTktDLm1ldGhvZHMudG9vbHMuZ2V0VXJsLFxyXG4gICAgdG9hc3Q6IE5LQy5tZXRob2RzLmFwcFRvYXN0LFxyXG4gICAgY2hlY2tDb250ZW50KCkge1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKCgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XHJcbiAgICAgICAgaWYoIXNlbGYuY29udGVudCkge1xyXG4gICAgICAgICAgcmVqZWN0KCfor7fovpPlhaXlhoXlrrknKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgcmVzb2x2ZShzZWxmLmNvbnRlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSkpO1xyXG4gICAgfSxcclxuICAgIHJlc2V0U3RhdHVzKCkge1xyXG4gICAgICB0aGlzLnN0YXR1cyA9ICd1blNlYXJjaCc7XHJcbiAgICB9LFxyXG4gICAgZ2V0VXNlcigpIHtcclxuICAgICAgY29uc3Qgc2VsZiA9IHRoaXM7XHJcbiAgICAgIGNvbnN0IHtwYWdlLCBjb250ZW50fSA9IHRoaXM7XHJcbiAgICAgIGlmKHNlbGYuc3RhdHVzID09PSAnc2VhcmNoaW5nJykgcmV0dXJuO1xyXG4gICAgICBzZWxmLnN0YXR1cyA9ICdzZWFyY2hpbmcnO1xyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKClcclxuICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICByZXR1cm4gbmtjQVBJKGAvbWVzc2FnZS9zZWFyY2g/dWlkPSR7Y29udGVudH0mdXNlcm5hbWU9JHtjb250ZW50fSZwYWdlPSR7cGFnZX0mdD0ke0RhdGUubm93KCl9YCwgJ0dFVCcpXHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgIGNvbnN0IHtwYWdlLCBwYWdlQ291bnR9ID0gZGF0YS5wYWdpbmc7XHJcbiAgICAgICAgICBzZWxmLnBhZ2UgPSBwYWdlO1xyXG4gICAgICAgICAgc2VsZi5wYWdlQ291bnQgPSBwYWdlQ291bnQ7XHJcbiAgICAgICAgICBzZWxmLnVzZXJzID0gc2VsZi51c2Vycy5jb25jYXQoZGF0YS51c2Vycyk7XHJcbiAgICAgICAgICBpZihwYWdlICsgMSA+PSBwYWdlQ291bnQpIHNlbGYuZW5kID0gdHJ1ZTtcclxuICAgICAgICAgIHNlbGYucmVzZXRTdGF0dXMoKTtcclxuICAgICAgICB9KVxyXG5cclxuICAgIH0sXHJcbiAgICBzZWFyY2goKSB7XHJcbiAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgICBzZWxmLmNoZWNrQ29udGVudCgpXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgc2VsZi5wYWdlID0gMDtcclxuICAgICAgICAgIHNlbGYuZW5kID0gZmFsc2U7XHJcbiAgICAgICAgICBzZWxmLnBhZ2VDb3VudCA9IDk5OTk5OTtcclxuICAgICAgICAgIHJldHVybiBzZWxmLmdldFVzZXIoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChkYXRhID0+IHtcclxuICAgICAgICAgIHNlbGYucmVzZXRTdGF0dXMoKTtcclxuICAgICAgICAgIHNlbGYudG9hc3QoZGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9LFxyXG4gICAgbG9hZE1vcmUoKSB7XHJcbiAgICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgICBzZWxmLmNoZWNrQ29udGVudCgpXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgaWYoc2VsZi5wYWdlICsgMSA+PSBzZWxmLnBhZ2VDb3VudCkgdGhyb3cgJ+WIsOW6leS6hic7XHJcbiAgICAgICAgICBzZWxmLnBhZ2UgKz0gMTtcclxuICAgICAgICAgIHJldHVybiBzZWxmLmdldFVzZXIoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaCgoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgc2VsZi5yZXNldFN0YXR1cygpO1xyXG4gICAgICAgICAgc2VsZi50b2FzdChkYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgIH0sXHJcbiAgICB0b1NlbmRNZXNzYWdlKHUpIHtcclxuICAgICAgTktDLm1ldGhvZHMudG9DaGF0KHUudWlkKTtcclxuICAgIH1cclxuICB9LFxyXG4gIG1vdW50ZWQoKSB7XHJcbiAgICB0aGlzLmNvbnRlbnQgPSAn5oiRJztcclxuICAgIHRoaXMuc2VhcmNoKCk7XHJcbiAgfVxyXG59KVxyXG4iXX0=
