(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById("data");

if (data.friend) {
  data.friend.info._phone = data.friend.info.phone.map(function (p) {
    return {
      number: p
    };
  });

  if (!data.friend.info._phone.length) {
    data.friend.info._phone = [{
      number: ''
    }];
  }
}

window.app = new Vue({
  el: '#app',
  data: {
    friend: data.friend,
    fc: data.friendCategories,
    targetUser: data.targetUser,
    targetUserName: data.targetUserName,
    inBlacklist: data.inBlacklist,
    friendImageUrl: '',
    showNote: false
  },
  methods: {
    // 访问用户首页
    visitUserHome: function visitUserHome() {
      NKC.methods.visitUrl("/u/".concat(this.targetUser.uid), true);
    },
    _removeFriend: function _removeFriend() {
      var tUid = this.targetUser.uid;
      return nkcAPI('/friend/' + tUid, 'DELETE', {});
    },
    // 添加、删除好友
    addFriend: function addFriend(isFriend) {
      var _removeFriend = this._removeFriend;

      if (isFriend) {
        // 删除好友
        sweetQuestion('确定要删除该好友？').then(function () {
          return _removeFriend();
        }).then(function () {
          NKC.methods.appToast('删除成功');
          NKC.methods.appReloadPage();
        })["catch"](NKC.methods.appToast);
      } else {
        // 添加好友
        NKC.methods.visitUrl("/message/addFriend?uid=".concat(this.targetUser.uid), true);
      }
    },
    // 添加、移除黑名单
    moveToBlacklist: function moveToBlacklist() {
      var tUid = this.targetUser.uid;
      var inBlacklist = this.inBlacklist;
      var friend = this.friend;
      var _removeFriend = this._removeFriend;
      Promise.resolve().then(function () {
        if (!inBlacklist) {
          return sweetQuestion("确认要将该用户加入黑名单？");
        }
      }).then(function () {
        if (!inBlacklist && friend) {
          return _removeFriend();
        }
      }).then(function () {
        if (!inBlacklist) {
          return nkcAPI("/message/blackList", 'POST', {
            tUid: tUid,
            type: 'add'
          });
        } else {
          return nkcAPI('/message/blackList', 'POST', {
            tUid: tUid,
            type: 'remove'
          });
        }
      }).then(function () {
        NKC.methods.appToast('操作成功');
        NKC.methods.appReloadPage();
      })["catch"](NKC.methods.appToast);
    },
    // 打开聊天页面
    sendToUser: function sendToUser() {
      var uid = this.targetUser.uid;
      var targetUserName = this.targetUserName;
      NKC.methods.rn.emit('toChat', {
        uid: uid,
        type: 'UTU',
        username: targetUserName
      });
    },
    // 选择地区
    selectLocation: function selectLocation() {
      var self = this;
      NKC.methods.appSelectLocation().then(function (data) {
        self.friend.info.location = data.location.join('  ');
      });
    },
    // 添加联系电话
    addPhone: function addPhone() {
      this.friend.info.phone.push('');
    },
    // 删除联系电话
    removePhone: function removePhone(index) {
      this.friend.info._phone.splice(index, 1);
    },
    // 获取好友图片链接
    setFriendImageUrl: function setFriendImageUrl() {
      this.friendImageUrl = "/friend/".concat(this.targetUser.uid, "/image?t=").concat(Date.now());
    },
    // 选择图片
    selectFriendImage: function selectFriendImage() {
      this.$refs.input.value = null;
      this.$refs.input.click();
    },
    // 删除图片
    removeFriendImage: function removeFriendImage() {
      this.friend.info.image = false;
    },
    // 选择完图片后
    selectedFriendImage: function selectedFriendImage() {
      var self = this;
      var files = this.$refs.input.files;
      if (!files.length) return;
      var file = files[0];
      var formData = new FormData();
      formData.append('file', file);
      NKC.methods.appToast('上传中，请稍候');
      nkcUploadFile("/friend/".concat(self.targetUser.uid, "/image"), 'POST', formData).then(function () {
        NKC.methods.appToast('上传成功');
        self.setFriendImageUrl();
        self.friend.info.image = true;
      })["catch"](NKC.methods.appToast);
    },
    // 显示，隐藏备注信息
    switchNote: function switchNote() {
      this.showNote = !this.showNote;
    },
    // 保存好友信息
    saveFriendInfo: function saveFriendInfo() {
      var friend = this.friend,
          targetUser = this.targetUser;
      friend.info.phone = friend.info._phone.map(function (p) {
        return p.number;
      });
      nkcAPI("/message/settings/".concat(targetUser.uid), 'PATCH', {
        info: friend.info,
        cid: friend.cid
      }).then(function () {
        NKC.methods.appToast('保存成功');
      })["catch"](NKC.methods.appToast);
    }
  },
  mounted: function mounted() {
    this.setFriendImageUrl();
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
