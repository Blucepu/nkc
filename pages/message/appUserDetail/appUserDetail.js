(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById("data");

if (data.friend) {
  data.friend.info._phone = data.friend.info.phone.map(function (p) {
    return {
      number: p
    };
  });

  if (!data.friend.info._phone.length) {
    data.friend.info._phone = [{
      number: ''
    }];
  }
}

window.app = new Vue({
  el: '#app',
  data: {
    friend: data.friend,
    fc: data.friendCategories,
    targetUser: data.targetUser,
    targetUserName: data.targetUserName,
    inBlacklist: data.inBlacklist,
    friendImageUrl: '',
    showNote: false
  },
  methods: {
    // 访问用户首页
    visitUserHome: function visitUserHome() {
      NKC.methods.visitUrl("/u/".concat(this.targetUser.uid), true);
    },
    _removeFriend: function _removeFriend() {
      var tUid = this.targetUser.uid;
      return nkcAPI('/friend/' + tUid, 'DELETE', {});
    },
    // 添加、删除好友
    addFriend: function addFriend(isFriend) {
      var _removeFriend = this._removeFriend;

      if (isFriend) {
        // 删除好友
        sweetQuestion('确定要删除该好友？').then(function () {
          return _removeFriend();
        }).then(function () {
          NKC.methods.appToast('删除成功');
          NKC.methods.appReloadPage();
        })["catch"](NKC.methods.appToast);
      } else {
        // 添加好友
        NKC.methods.visitUrl("/message/addFriend?uid=".concat(this.targetUser.uid), true);
      }
    },
    // 添加、移除黑名单
    moveToBlacklist: function moveToBlacklist() {
      var tUid = this.targetUser.uid;
      var inBlacklist = this.inBlacklist;
      var friend = this.friend;
      var _removeFriend = this._removeFriend;
      Promise.resolve().then(function () {
        if (!inBlacklist && friend) {// return _removeFriend();
        }
      }).then(function () {
        if (!inBlacklist) {
          return NKC.methods.addUserToBlacklist(tUid, 'message');
        } else {
          return NKC.methods.removeUserFromBlacklist(tUid);
        }
      }).then(function (data) {
        if (!data) return; // NKC.methods.appToast('操作成功');

        NKC.methods.appReloadPage();
      })["catch"](NKC.methods.appToast);
    },
    // 打开聊天页面
    sendToUser: function sendToUser() {
      var uid = this.targetUser.uid;
      var targetUserName = this.targetUserName;
      NKC.methods.rn.emit('toChat', {
        uid: uid,
        type: 'UTU',
        username: targetUserName
      });
    },
    // 选择地区
    selectLocation: function selectLocation() {
      var self = this;
      NKC.methods.appSelectLocation().then(function (data) {
        self.friend.info.location = data.location.join('  ');
      });
    },
    // 添加联系电话
    addPhone: function addPhone() {
      this.friend.info.phone.push('');
    },
    // 删除联系电话
    removePhone: function removePhone(index) {
      this.friend.info._phone.splice(index, 1);
    },
    // 获取好友图片链接
    setFriendImageUrl: function setFriendImageUrl() {
      this.friendImageUrl = "/friend/".concat(this.targetUser.uid, "/image?t=").concat(Date.now());
    },
    // 选择图片
    selectFriendImage: function selectFriendImage() {
      this.$refs.input.value = null;
      this.$refs.input.click();
    },
    // 删除图片
    removeFriendImage: function removeFriendImage() {
      this.friend.info.image = false;
    },
    // 选择完图片后
    selectedFriendImage: function selectedFriendImage() {
      var self = this;
      var files = this.$refs.input.files;
      if (!files.length) return;
      var file = files[0];
      var formData = new FormData();
      formData.append('file', file);
      NKC.methods.appToast('上传中，请稍候');
      nkcUploadFile("/friend/".concat(self.targetUser.uid, "/image"), 'POST', formData).then(function () {
        NKC.methods.appToast('上传成功');
        self.setFriendImageUrl();
        self.friend.info.image = true;
      })["catch"](NKC.methods.appToast);
    },
    // 显示，隐藏备注信息
    switchNote: function switchNote() {
      this.showNote = !this.showNote;
    },
    // 保存好友信息
    saveFriendInfo: function saveFriendInfo() {
      var friend = this.friend,
          targetUser = this.targetUser;
      friend.info.phone = friend.info._phone.map(function (p) {
        return p.number;
      });
      nkcAPI("/message/settings/".concat(targetUser.uid), 'PATCH', {
        info: friend.info,
        cid: friend.cid
      }).then(function () {
        NKC.methods.appToast('保存成功');
      })["catch"](NKC.methods.appToast);
    }
  },
  mounted: function mounted() {
    this.setFriendImageUrl();
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwYWdlcy9tZXNzYWdlL2FwcFVzZXJEZXRhaWwvYXBwVXNlckRldGFpbC5tanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFKLENBQVksV0FBWixDQUF3QixNQUF4QixDQUFiOztBQUNBLElBQUcsSUFBSSxDQUFDLE1BQVIsRUFBZ0I7QUFDZCxFQUFBLElBQUksQ0FBQyxNQUFMLENBQVksSUFBWixDQUFpQixNQUFqQixHQUEwQixJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosQ0FBaUIsS0FBakIsQ0FBdUIsR0FBdkIsQ0FBMkIsVUFBQSxDQUFDLEVBQUk7QUFDeEQsV0FBTztBQUNMLE1BQUEsTUFBTSxFQUFFO0FBREgsS0FBUDtBQUdELEdBSnlCLENBQTFCOztBQUtBLE1BQUcsQ0FBQyxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosQ0FBaUIsTUFBakIsQ0FBd0IsTUFBNUIsRUFBb0M7QUFDbEMsSUFBQSxJQUFJLENBQUMsTUFBTCxDQUFZLElBQVosQ0FBaUIsTUFBakIsR0FBMEIsQ0FBQztBQUFDLE1BQUEsTUFBTSxFQUFFO0FBQVQsS0FBRCxDQUExQjtBQUNEO0FBQ0Y7O0FBQ0QsTUFBTSxDQUFDLEdBQVAsR0FBYSxJQUFJLEdBQUosQ0FBUTtBQUNuQixFQUFBLEVBQUUsRUFBRSxNQURlO0FBRW5CLEVBQUEsSUFBSSxFQUFFO0FBQ0osSUFBQSxNQUFNLEVBQUUsSUFBSSxDQUFDLE1BRFQ7QUFFSixJQUFBLEVBQUUsRUFBRSxJQUFJLENBQUMsZ0JBRkw7QUFHSixJQUFBLFVBQVUsRUFBRSxJQUFJLENBQUMsVUFIYjtBQUlKLElBQUEsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUpqQjtBQUtKLElBQUEsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUxkO0FBTUosSUFBQSxjQUFjLEVBQUUsRUFOWjtBQU9KLElBQUEsUUFBUSxF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QUssaUJBQUw7QUFDRDtBQTdJa0IsQ0FBUixDQUFiIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24oKXtmdW5jdGlvbiByKGUsbix0KXtmdW5jdGlvbiBvKGksZil7aWYoIW5baV0pe2lmKCFlW2ldKXt2YXIgYz1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlO2lmKCFmJiZjKXJldHVybiBjKGksITApO2lmKHUpcmV0dXJuIHUoaSwhMCk7dmFyIGE9bmV3IEVycm9yKFwiQ2Fubm90IGZpbmQgbW9kdWxlICdcIitpK1wiJ1wiKTt0aHJvdyBhLmNvZGU9XCJNT0RVTEVfTk9UX0ZPVU5EXCIsYX12YXIgcD1uW2ldPXtleHBvcnRzOnt9fTtlW2ldWzBdLmNhbGwocC5leHBvcnRzLGZ1bmN0aW9uKHIpe3ZhciBuPWVbaV1bMV1bcl07cmV0dXJuIG8obnx8cil9LHAscC5leHBvcnRzLHIsZSxuLHQpfXJldHVybiBuW2ldLmV4cG9ydHN9Zm9yKHZhciB1PVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsaT0wO2k8dC5sZW5ndGg7aSsrKW8odFtpXSk7cmV0dXJuIG99cmV0dXJuIHJ9KSgpIiwiY29uc3QgZGF0YSA9IE5LQy5tZXRob2RzLmdldERhdGFCeUlkKFwiZGF0YVwiKTtcclxuaWYoZGF0YS5mcmllbmQpIHtcclxuICBkYXRhLmZyaWVuZC5pbmZvLl9waG9uZSA9IGRhdGEuZnJpZW5kLmluZm8ucGhvbmUubWFwKHAgPT4ge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgbnVtYmVyOiBwXHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgaWYoIWRhdGEuZnJpZW5kLmluZm8uX3Bob25lLmxlbmd0aCkge1xyXG4gICAgZGF0YS5mcmllbmQuaW5mby5fcGhvbmUgPSBbe251bWJlcjogJyd9XVxyXG4gIH1cclxufVxyXG53aW5kb3cuYXBwID0gbmV3IFZ1ZSh7XHJcbiAgZWw6ICcjYXBwJyxcclxuICBkYXRhOiB7XHJcbiAgICBmcmllbmQ6IGRhdGEuZnJpZW5kLFxyXG4gICAgZmM6IGRhdGEuZnJpZW5kQ2F0ZWdvcmllcyxcclxuICAgIHRhcmdldFVzZXI6IGRhdGEudGFyZ2V0VXNlcixcclxuICAgIHRhcmdldFVzZXJOYW1lOiBkYXRhLnRhcmdldFVzZXJOYW1lLFxyXG4gICAgaW5CbGFja2xpc3Q6IGRhdGEuaW5CbGFja2xpc3QsXHJcbiAgICBmcmllbmRJbWFnZVVybDogJycsXHJcbiAgICBzaG93Tm90ZTogZmFsc2UsXHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICAvLyDorr/pl67nlKjmiLfpppbpobVcclxuICAgIHZpc2l0VXNlckhvbWUoKSB7XHJcbiAgICAgIE5LQy5tZXRob2RzLnZpc2l0VXJsKGAvdS8ke3RoaXMudGFyZ2V0VXNlci51aWR9YCwgdHJ1ZSlcclxuICAgIH0sXHJcbiAgICBfcmVtb3ZlRnJpZW5kKCkge1xyXG4gICAgICBjb25zdCB0VWlkID0gdGhpcy50YXJnZXRVc2VyLnVpZDtcclxuICAgICAgcmV0dXJuIG5rY0FQSSgnL2ZyaWVuZC8nICsgdFVpZCwgJ0RFTEVURScsIHt9KTtcclxuICAgIH0sXHJcbiAgICAvLyDmt7vliqDjgIHliKDpmaTlpb3lj4tcclxuICAgIGFkZEZyaWVuZChpc0ZyaWVuZCkge1xyXG4gICAgICBjb25zdCBfcmVtb3ZlRnJpZW5kID0gdGhpcy5fcmVtb3ZlRnJpZW5kO1xyXG4gICAgICBpZihpc0ZyaWVuZCkge1xyXG4gICAgICAgIC8vIOWIoOmZpOWlveWPi1xyXG4gICAgICAgIHN3ZWV0UXVlc3Rpb24oJ+ehruWumuimgeWIoOmZpOivpeWlveWPi++8nycpXHJcbiAgICAgICAgICAudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiBfcmVtb3ZlRnJpZW5kKCk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICBOS0MubWV0aG9kcy5hcHBUb2FzdCgn5Yig6Zmk5oiQ5YqfJyk7XHJcbiAgICAgICAgICAgIE5LQy5tZXRob2RzLmFwcFJlbG9hZFBhZ2UoKTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgICAgICAuY2F0Y2goTktDLm1ldGhvZHMuYXBwVG9hc3QpXHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgLy8g5re75Yqg5aW95Y+LXHJcbiAgICAgICAgTktDLm1ldGhvZHMudmlzaXRVcmwoYC9tZXNzYWdlL2FkZEZyaWVuZD91aWQ9JHt0aGlzLnRhcmdldFVzZXIudWlkfWAsIHRydWUpO1xyXG4gICAgICB9XHJcbiAgICB9LFxyXG4gICAgLy8g5re75Yqg44CB56e76Zmk6buR5ZCN5Y2VXHJcbiAgICBtb3ZlVG9CbGFja2xpc3QoKSB7XHJcbiAgICAgIGNvbnN0IHRVaWQgPSB0aGlzLnRhcmdldFVzZXIudWlkO1xyXG4gICAgICBjb25zdCBpbkJsYWNrbGlzdCA9IHRoaXMuaW5CbGFja2xpc3Q7XHJcbiAgICAgIGNvbnN0IGZyaWVuZCA9IHRoaXMuZnJpZW5kO1xyXG4gICAgICBjb25zdCBfcmVtb3ZlRnJpZW5kID0gdGhpcy5fcmVtb3ZlRnJpZW5kO1xyXG4gICAgICBQcm9taXNlLnJlc29sdmUoKVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIGlmKCFpbkJsYWNrbGlzdCAmJiBmcmllbmQpIHtcclxuICAgICAgICAgICAgLy8gcmV0dXJuIF9yZW1vdmVGcmllbmQoKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9KVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIGlmKCFpbkJsYWNrbGlzdCkge1xyXG4gICAgICAgICAgICByZXR1cm4gTktDLm1ldGhvZHMuYWRkVXNlclRvQmxhY2tsaXN0KHRVaWQsICdtZXNzYWdlJyk7XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gTktDLm1ldGhvZHMucmVtb3ZlVXNlckZyb21CbGFja2xpc3QodFVpZCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgICAgICAudGhlbigoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgaWYoIWRhdGEpIHJldHVybjtcclxuICAgICAgICAgIC8vIE5LQy5tZXRob2RzLmFwcFRvYXN0KCfmk43kvZzmiJDlip8nKTtcclxuICAgICAgICAgIE5LQy5tZXRob2RzLmFwcFJlbG9hZFBhZ2UoKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChOS0MubWV0aG9kcy5hcHBUb2FzdClcclxuICAgIH0sXHJcbiAgICAvLyDmiZPlvIDogYrlpKnpobXpnaJcclxuICAgIHNlbmRUb1VzZXIoKSB7XHJcbiAgICAgIGNvbnN0IHVpZCA9IHRoaXMudGFyZ2V0VXNlci51aWQ7XHJcbiAgICAgIGNvbnN0IHRhcmdldFVzZXJOYW1lID0gdGhpcy50YXJnZXRVc2VyTmFtZTtcclxuICAgICAgTktDLm1ldGhvZHMucm4uZW1pdCgndG9DaGF0Jywge1xyXG4gICAgICAgIHVpZDogdWlkLFxyXG4gICAgICAgIHR5cGU6ICdVVFUnLFxyXG4gICAgICAgIHVzZXJuYW1lOiB0YXJnZXRVc2VyTmFtZVxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICAvLyDpgInmi6nlnLDljLpcclxuICAgIHNlbGVjdExvY2F0aW9uKCkge1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgTktDLm1ldGhvZHMuYXBwU2VsZWN0TG9jYXRpb24oKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgc2VsZi5mcmllbmQuaW5mby5sb2NhdGlvbiA9IGRhdGEubG9jYXRpb24uam9pbignICAnKTtcclxuICAgICAgICB9KVxyXG4gICAgfSxcclxuICAgIC8vIOa3u+WKoOiBlOezu+eUteivnVxyXG4gICAgYWRkUGhvbmUoKSB7XHJcbiAgICAgIHRoaXMuZnJpZW5kLmluZm8ucGhvbmUucHVzaCgnJyk7XHJcbiAgICB9LFxyXG4gICAgLy8g5Yig6Zmk6IGU57O755S16K+dXHJcbiAgICByZW1vdmVQaG9uZShpbmRleCkge1xyXG4gICAgICB0aGlzLmZyaWVuZC5pbmZvLl9waG9uZS5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgfSxcclxuICAgIC8vIOiOt+WPluWlveWPi+WbvueJh+mTvuaOpVxyXG4gICAgc2V0RnJpZW5kSW1hZ2VVcmwoKSB7XHJcbiAgICAgIHRoaXMuZnJpZW5kSW1hZ2VVcmwgPSBgL2ZyaWVuZC8ke3RoaXMudGFyZ2V0VXNlci51aWR9L2ltYWdlP3Q9JHtEYXRlLm5vdygpfWA7XHJcbiAgICB9LFxyXG4gICAgLy8g6YCJ5oup5Zu+54mHXHJcbiAgICBzZWxlY3RGcmllbmRJbWFnZSgpIHtcclxuICAgICAgdGhpcy4kcmVmcy5pbnB1dC52YWx1ZSA9IG51bGw7XHJcbiAgICAgIHRoaXMuJHJlZnMuaW5wdXQuY2xpY2soKTtcclxuICAgIH0sXHJcbiAgICAvLyDliKDpmaTlm77niYdcclxuICAgIHJlbW92ZUZyaWVuZEltYWdlKCkge1xyXG4gICAgICB0aGlzLmZyaWVuZC5pbmZvLmltYWdlID0gZmFsc2U7XHJcbiAgICB9LFxyXG4gICAgLy8g6YCJ5oup5a6M5Zu+54mH5ZCOXHJcbiAgICBzZWxlY3RlZEZyaWVuZEltYWdlKCkge1xyXG4gICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuICAgICAgY29uc3Qge2ZpbGVzfSA9IHRoaXMuJHJlZnMuaW5wdXQ7XHJcbiAgICAgIGlmKCFmaWxlcy5sZW5ndGgpIHJldHVybjtcclxuICAgICAgY29uc3QgZmlsZSA9IGZpbGVzWzBdO1xyXG4gICAgICBjb25zdCBmb3JtRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xyXG4gICAgICBmb3JtRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcclxuICAgICAgTktDLm1ldGhvZHMuYXBwVG9hc3QoJ+S4iuS8oOS4re+8jOivt+eojeWAmScpO1xyXG4gICAgICBua2NVcGxvYWRGaWxlKGAvZnJpZW5kLyR7c2VsZi50YXJnZXRVc2VyLnVpZH0vaW1hZ2VgLCAnUE9TVCcsIGZvcm1EYXRhKVxyXG4gICAgICAgIC50aGVuKCgpID0+IHtcclxuICAgICAgICAgIE5LQy5tZXRob2RzLmFwcFRvYXN0KCfkuIrkvKDmiJDlip8nKTtcclxuICAgICAgICAgIHNlbGYuc2V0RnJpZW5kSW1hZ2VVcmwoKTtcclxuICAgICAgICAgIHNlbGYuZnJpZW5kLmluZm8uaW1hZ2UgPSB0cnVlO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKE5LQy5tZXRob2RzLmFwcFRvYXN0KTtcclxuICAgIH0sXHJcbiAgICAvLyDmmL7npLrvvIzpmpDol4/lpIfms6jkv6Hmga9cclxuICAgIHN3aXRjaE5vdGUoKSB7XHJcbiAgICAgIHRoaXMuc2hvd05vdGUgPSAhdGhpcy5zaG93Tm90ZTtcclxuICAgIH0sXHJcbiAgICAvLyDkv53lrZjlpb3lj4vkv6Hmga9cclxuICAgIHNhdmVGcmllbmRJbmZvKCkge1xyXG4gICAgICBjb25zdCB7ZnJpZW5kLCB0YXJnZXRVc2VyfSA9IHRoaXM7XHJcbiAgICAgIGZyaWVuZC5pbmZvLnBob25lID0gZnJpZW5kLmluZm8uX3Bob25lLm1hcChwID0+IHAubnVtYmVyKTtcclxuICAgICAgbmtjQVBJKGAvbWVzc2FnZS9zZXR0aW5ncy8ke3RhcmdldFVzZXIudWlkfWAsICdQQVRDSCcsIHtcclxuICAgICAgICBpbmZvOiBmcmllbmQuaW5mbyxcclxuICAgICAgICBjaWQ6IGZyaWVuZC5jaWQsXHJcbiAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgTktDLm1ldGhvZHMuYXBwVG9hc3QoJ+S/neWtmOaIkOWKnycpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKE5LQy5tZXRob2RzLmFwcFRvYXN0KVxyXG4gICAgfVxyXG4gIH0sXHJcbiAgbW91bnRlZCgpIHtcclxuICAgIHRoaXMuc2V0RnJpZW5kSW1hZ2VVcmwoKTtcclxuICB9XHJcbn0pXHJcbiJdfQ==
