(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById('data');
var hours = [];

for (var i = 0; i <= 24; i++) {
  hours.push(i);
}

var gradeList = data.certList.filter(function (c) {
  return c.type.indexOf('grade-') === 0 || ['role-visitor'].includes(c.type);
});
var roleList = data.certList.filter(function (c) {
  return c.type.indexOf('role-') === 0 && !['role-visitor'].includes(c.type);
});
var app = new Vue({
  el: '#app',
  data: {
    hours: hours,
    certList: data.certList,
    gradeList: gradeList,
    roleList: roleList,
    settings: data.downloadSettings
  },
  methods: {
    addSpeed: function addSpeed(arr) {
      arr.push({
        startingTime: 0,
        endTime: 24,
        speed: 0
      });
    },
    addFileCount: function addFileCount(arr) {
      arr.push({
        startingTime: 0,
        endTime: 24,
        fileCount: 0
      });
    },
    removeFromArray: function removeFromArray(arr, index) {
      arr.splice(index, 1);
    },
    addCert: function addCert(arr) {
      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'speed';
      var item = {
        type: '',
        data: []
      };

      if (type === 'speed') {
        this.addSpeed(item.data);
      } else {
        this.addFileCount(item.data);
      }

      arr.push(item);
    },
    addRole: function addRole(arr) {
      arr.push({
        type: '',
        fileCount: 0
      });
    },
    save: function save() {
      nkcAPI('/e/settings/download', 'PUT', {
        downloadSettings: this.settings
      }).then(function () {
        sweetSuccess('保存成功');
      })["catch"](sweetError);
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwYWdlcy9leHBlcmltZW50YWwvc2V0dGluZ3MvZG93bmxvYWQvZG93bmxvYWQubWpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQSxJQUFNLElBQUksR0FBRyxHQUFHLENBQUMsT0FBSixDQUFZLFdBQVosQ0FBd0IsTUFBeEIsQ0FBYjtBQUNBLElBQU0sS0FBSyxHQUFHLEVBQWQ7O0FBQ0EsS0FBSSxJQUFJLENBQUMsR0FBRyxDQUFaLEVBQWUsQ0FBQyxJQUFHLEVBQW5CLEVBQXVCLENBQUMsRUFBeEIsRUFBNEI7QUFDMUIsRUFBQSxLQUFLLENBQUMsSUFBTixDQUFXLENBQVg7QUFDRDs7QUFDRCxJQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsUUFBTCxDQUFjLE1BQWQsQ0FBcUIsVUFBQSxDQUFDO0FBQUEsU0FBSSxDQUFDLENBQUMsSUFBRixDQUFPLE9BQVAsQ0FBZSxRQUFmLE1BQTZCLENBQTdCLElBQWtDLENBQUMsY0FBRCxFQUFpQixRQUFqQixDQUEwQixDQUFDLENBQUMsSUFBNUIsQ0FBdEM7QUFBQSxDQUF0QixDQUFsQjtBQUNBLElBQU0sUUFBUSxHQUFHLElBQUksQ0FBQyxRQUFMLENBQWMsTUFBZCxDQUFxQixVQUFBLENBQUM7QUFBQSxTQUFJLENBQUMsQ0FBQyxJQUFGLENBQU8sT0FBUCxDQUFlLE9BQWYsTUFBNEIsQ0FBNUIsSUFBaUMsQ0FBQyxDQUFDLGNBQUQsRUFBaUIsUUFBakIsQ0FBMEIsQ0FBQyxDQUFDLElBQTVCLENBQXRDO0FBQUEsQ0FBdEIsQ0FBakI7QUFDQSxJQUFNLEdBQUcsR0FBRyxJQUFJLEdBQUosQ0FBUTtBQUNsQixFQUFBLEVBQUUsRUFBRSxNQURjO0FBRWxCLEVBQUEsSUFBSSxFQUFFO0FBQ0osSUFBQSxLQUFLLEVBQUwsS0FESTtBQUVKLElBQUEsUUFBUSxFQUFFLElBQUksQ0FBQyxRQUZYO0FBR0osSUFBQSxTQUFTLEVBQVQsU0FISTtBQUlKLElBQUEsUUFBUSxFQUFSLFFBSkk7QUFLSixJQUFBLFFBQVEsRUFBRSxJQUFJLENBQUM7QUFMWCxHQUZZO0FBU2xCLEVBQUEsT0FBTyxFQUFFO0FBQ1AsSUFBQSxRQURPLG9CQUNFLEdBREYsRUFDTztBQUNaLE1BQUEsR0FBRyxDQUFDLElBQUosQ0FBUztBQUNQLFFBQUEsWUFBWSxFQUFFLENBRFA7QUFFUCxRQUFBLE9BQU8sRUFBRSxFQUZGO0FBR1AsUUFBQSxLQUFLLEVBQUU7QUFIQSxPQUFUO0FBS0QsS0FQTTtBQVFQLElBQUEsWUFSTyx3QkFRTSxHQVJOLEVBUVc7QUFDaEIsTUFBQSxHQUFHLENBQUMsSUFBSixDQUFTO0FBQ1AsUUFBQSxZQUFZLEVBQUUsQ0FEUDtBQUVQLFFBQUEsT0FBTyxFQUFFLEVBRkY7QUFHUCxRQUFBLFNBQVMsRUFBRTtBQUhKLE9BQVQ7QUFLRCxLQWRNO0FBZVAsSUFBQSxlQWZPLDJCQWVTLEdBZlQsRUFlYyxLQWZkLEVBZXFCO0FBQzFCLE1BQUEsR0FBRyxDQUFDLE1BQUosQ0FBVyxLQUFYLEVBQWtCLENBQWxCO0FBQ0QsS0FqQk07QUFrQlAsSUFBQSxPQWxCTyxtQkFrQkMsR0FsQkQsRUFrQnNCO0FBQUEsVUFBaEIsSUFBZ0IsdUVBQVQsT0FBUztBQUMzQixVQUFNLElBQUksR0FBRztBQUNYLFFBQUEsSUFBSSxFQUFFLEVBREs7QUFFWCxRQUFBLElBQUksRUFBRTtBQUZLLE9BQWI7O0FBSUEsVUFBRyxJQUFJLEtBQUssT0FBWixFQUFxQjtBQUNuQixhQUFLLFFBQUwsQ0FBYyxJQUFJLENBQUMsSUFBbkI7QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLLFlBQUwsQ0FBa0IsSUFBSSxDQUFDLElBQXZCO0FBQ0Q7O0FBQ0QsTUFBQSxHQUFHLENBQUMsSUFBSixDQUFTLElBQVQ7QUFDRCxLQTdCTTtBQThCUCxJQUFBLE9BOUJPLG1CQThCQyxHQTlCRCxFQThCTTtBQUNYLE1BQUEsR0FBRyxDQUFDLElBQUosQ0FBUztBQUNQLFFBQUEsSUFBSSxFQUFDLEVBREU7QUFFUCxRQUFBLFNBQVMsRUFBRTtBQUZKLE9BQVQ7QUFJRCxLQW5DTTtBQW9DUCxJQUFBLElBcENPLGtCQW9DQTtBQUNMLE1BQUEsTUFBTSxDQUFDLHNCQUFELEVBQXlCLEtBQXpCLEVBQWdDO0FBQ3BDLFFBQUEsZ0JBQWdCLEVBQUUsS0FBSztBQURhLE9BQWhDLENBQU4sQ0FHRyxJQUhILENBR1EsWUFBTTtBQUNWLFFBQUEsWUFBWSxDQUFDLE1BQUQsQ0FBWjtBQUNELE9BTEgsV0FNUyxVQU5UO0FBT0Q7QUE1Q007QUFUUyxDQUFSLENBQVoiLCJmaWxlIjoiZ2VuZXJhdGVkLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCBkYXRhID0gTktDLm1ldGhvZHMuZ2V0RGF0YUJ5SWQoJ2RhdGEnKTtcclxuY29uc3QgaG91cnMgPSBbXTtcclxuZm9yKGxldCBpID0gMDsgaSA8PTI0OyBpKyspIHtcclxuICBob3Vycy5wdXNoKGkpO1xyXG59XHJcbmNvbnN0IGdyYWRlTGlzdCA9IGRhdGEuY2VydExpc3QuZmlsdGVyKGMgPT4gYy50eXBlLmluZGV4T2YoJ2dyYWRlLScpID09PSAwIHx8IFsncm9sZS12aXNpdG9yJ10uaW5jbHVkZXMoYy50eXBlKSk7XHJcbmNvbnN0IHJvbGVMaXN0ID0gZGF0YS5jZXJ0TGlzdC5maWx0ZXIoYyA9PiBjLnR5cGUuaW5kZXhPZigncm9sZS0nKSA9PT0gMCAmJiAhWydyb2xlLXZpc2l0b3InXS5pbmNsdWRlcyhjLnR5cGUpKTtcclxuY29uc3QgYXBwID0gbmV3IFZ1ZSh7XHJcbiAgZWw6ICcjYXBwJyxcclxuICBkYXRhOiB7XHJcbiAgICBob3VycyxcclxuICAgIGNlcnRMaXN0OiBkYXRhLmNlcnRMaXN0LFxyXG4gICAgZ3JhZGVMaXN0LFxyXG4gICAgcm9sZUxpc3QsXHJcbiAgICBzZXR0aW5nczogZGF0YS5kb3dubG9hZFNldHRpbmdzXHJcbiAgfSxcclxuICBtZXRob2RzOiB7XHJcbiAgICBhZGRTcGVlZChhcnIpIHtcclxuICAgICAgYXJyLnB1c2goe1xyXG4gICAgICAgIHN0YXJ0aW5nVGltZTogMCxcclxuICAgICAgICBlbmRUaW1lOiAyNCxcclxuICAgICAgICBzcGVlZDogMFxyXG4gICAgICB9KTtcclxuICAgIH0sXHJcbiAgICBhZGRGaWxlQ291bnQoYXJyKSB7XHJcbiAgICAgIGFyci5wdXNoKHtcclxuICAgICAgICBzdGFydGluZ1RpbWU6IDAsXHJcbiAgICAgICAgZW5kVGltZTogMjQsXHJcbiAgICAgICAgZmlsZUNvdW50OiAwXHJcbiAgICAgIH0pO1xyXG4gICAgfSxcclxuICAgIHJlbW92ZUZyb21BcnJheShhcnIsIGluZGV4KSB7XHJcbiAgICAgIGFyci5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgfSxcclxuICAgIGFkZENlcnQoYXJyLCB0eXBlID0gJ3NwZWVkJykge1xyXG4gICAgICBjb25zdCBpdGVtID0ge1xyXG4gICAgICAgIHR5cGU6ICcnLFxyXG4gICAgICAgIGRhdGE6IFtdXHJcbiAgICAgIH07XHJcbiAgICAgIGlmKHR5cGUgPT09ICdzcGVlZCcpIHtcclxuICAgICAgICB0aGlzLmFkZFNwZWVkKGl0ZW0uZGF0YSk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhpcy5hZGRGaWxlQ291bnQoaXRlbS5kYXRhKTtcclxuICAgICAgfVxyXG4gICAgICBhcnIucHVzaChpdGVtKTtcclxuICAgIH0sXHJcbiAgICBhZGRSb2xlKGFycikge1xyXG4gICAgICBhcnIucHVzaCh7XHJcbiAgICAgICAgdHlwZTonJyxcclxuICAgICAgICBmaWxlQ291bnQ6IDBcclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzYXZlKCkge1xyXG4gICAgICBua2NBUEkoJy9lL3NldHRpbmdzL2Rvd25sb2FkJywgJ1BVVCcsIHtcclxuICAgICAgICBkb3dubG9hZFNldHRpbmdzOiB0aGlzLnNldHRpbmdzXHJcbiAgICAgIH0pXHJcbiAgICAgICAgLnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgc3dlZXRTdWNjZXNzKCfkv53lrZjmiJDlip8nKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIC5jYXRjaChzd2VldEVycm9yKVxyXG4gICAgfVxyXG4gIH1cclxufSk7XHJcbiJdfQ==
