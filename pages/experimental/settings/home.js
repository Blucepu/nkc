(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

function saveAdsOrder() {
  var arr = $('input[name="threadOrder"]');
  var orders = [];
  var ads = [];

  for (var i = 0; i < arr.length; i++) {
    var tid = arr.eq(i).attr('data-tid');
    var order = arr.eq(i).val();
    order = parseInt(order);

    if (orders.length === 0) {
      orders.push(order);
      ads.push(tid);
    } else {
      var pushed = false;

      for (var j = 0; j < orders.length; j++) {
        if (orders[j] > order) {
          orders.splice(j, 0, order);
          ads.splice(j, 0, tid);
          pushed = true;
          break;
        }
      }

      if (!pushed) {
        orders.push(order);
        ads.push(tid);
      }
    }
  }

  nkcAPI('/e/settings/home/top', 'PUT', {
    operation: 'modifyOrder',
    ads: ads
  }).then(function () {
    window.location.reload();
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

$('#inputFile').on('change', function () {
  var file = $('#inputFile')[0].files[0];

  if (file) {
    upLoadFile = file;
    var formData = new FormData();
    formData.append('file', upLoadFile);
    $.ajax({
      url: '/logo',
      method: 'POST',
      cache: false,
      data: formData,
      headers: {
        'FROM': 'nkcAPI'
      },
      dataType: 'json',
      contentType: false,
      processData: false
    }).done(function () {
      window.location.reload();
    }).fail(function (data) {
      screenTopWarning(JSON.parse(data.responseText).error);
    });
  }
});

function defaultLogo(id, type) {
  nkcAPI('/e/settings/home/logo', 'PUT', {
    id: id,
    type: type,
    operation: 'saveLogo'
  }).then(function () {
    window.location.reload();
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

function deleteLogo(id) {
  nkcAPI('/e/settings/home/logo?id=' + id, 'DELETE', {}).then(function () {
    window.location.reload();
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

function saveNotice() {
  var value = $('#threadId').val();
  var arr = value.split(',');
  nkcAPI('/e/settings/home/notice', 'PUT', {
    id: arr
  }).then(function () {
    window.location.reload();
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

function removeNotice(oc) {
  nkcAPI('/e/settings/home/notice?oc=' + oc, 'DELETE', {}).then(function () {
    window.location.reload();
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

function saveWaterMarkSettings() {
  var watermarkTransparency = $('#watermarkTransparency').val();
  var waterLimitMinWidth = $("#waterLimitMinWidth").val();
  var waterLimitMinHeight = $("#waterLimitMinHeight").val();
  nkcAPI('/e/settings/home/logo', 'PUT', {
    watermarkTransparency: watermarkTransparency,
    waterLimitMinWidth: parseInt(waterLimitMinWidth),
    waterLimitMinHeight: parseInt(waterLimitMinHeight),
    operation: 'saveWaterMarkSettings'
  }).then(function () {
    screenTopAlert('保存成功');
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

function uploadHomeBigLogo(files) {
  var form = new FormData();
  files.forEach(function (file, index) {
    form.append('file' + index, file);
  });
  return nkcUploadFile("/e/settings/home/list/biglogo", "POST", form);
}

function saveHomeListSettings() {
  var inputs = $('input[name="list"]');
  var topic = inputs.eq(0).is(':checked');
  var discipline = inputs.eq(1).is(':checked');
  var visitorThreadList = $('input[name="visitor"]');
  visitorThreadList = visitorThreadList.eq(0).is(":checked") ? "latest" : "recommend";
  nkcAPI('/e/settings/home/list', 'PUT', {
    topic: topic,
    discipline: discipline,
    visitorThreadList: visitorThreadList
  }).then(function () {
    screenTopAlert('保存成功');
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

var vueDom = document.getElementById("app");

if (vueDom) {
  var app = new Vue({
    el: '#app',
    data: {
      homeSettings: '',
      info: '',
      list: [],
      recommend: [],
      error: "",
      logoFiles: [],
      logoFileUploadding: false
    },
    beforeMount: function beforeMount() {
      var data = NKC.methods.getDataById("data");

      if (data.homeSettings.list.topic) {
        this.list.push("topic");
      }

      if (data.homeSettings.list.discipline) {
        this.list.push("discipline");
      }

      if (data.homeSettings.recommend.featuredThreads) {
        this.recommend.push("featuredThreads");
      }

      if (data.homeSettings.recommend.hotThreads) {
        this.recommend.push("hotThreads");
      }

      this.homeSettings = data.homeSettings;

      if (data.homeBigLogo) {
        this.logoFiles = this.logoFiles.concat(data.homeBigLogo);
      }
    },
    methods: {
      save: function save() {
        this.error = "";
        this.info = "";
        var homeSettings = this.homeSettings;
        var list = this.list;
        homeSettings.list.topic = false;
        homeSettings.list.discipline = false;
        if (homeSettings.hotThreads.postCount < 0) return this.error = "热门文章最小回复数不能小于0";
        if (homeSettings.hotThreads.postUserCount < 0) return this.error = "热门文章最小回复用户总数不能小于0";
        var recommend = this.recommend;
        homeSettings.recommend.hotThreads = false;
        homeSettings.recommend.featuredThreads = false;
        if (recommend.indexOf("hotThreads") !== -1) homeSettings.recommend.hotThreads = true;
        if (recommend.indexOf("featuredThreads") !== -1) homeSettings.recommend.featuredThreads = true;
        if (homeSettings.recommend.voteUpTotal < 0) return this.error = "推荐条件中点赞总数不能小于0";
        if (homeSettings.recommend.voteUpMax < 0) return this.error = "推荐条件中独立点赞数不能小于0";
        if (homeSettings.recommend.encourageTotal < 0) return this.error = "推荐条件中鼓励次数不能小于0";

        if (list.indexOf('topic') !== -1) {
          homeSettings.list.topic = true;
        }

        if (list.indexOf("discipline") !== -1) {
          homeSettings.list.discipline = true;
        }

        nkcAPI('/e/settings/home/list', 'PUT', {
          topic: homeSettings.list.topic,
          discipline: homeSettings.list.discipline,
          visitorThreadList: homeSettings.visitorThreadList,
          hotThreads: homeSettings.hotThreads,
          recommend: homeSettings.recommend
        }).then(function () {
          sweetSuccess('保存成功');
        })["catch"](function (data) {
          app.error = data.error || data;
        });
      },
      pickPicture: function pickPicture() {
        $("#inputFile").click();
      },
      addFile: function addFile() {
        var self = this;
        var files = [].slice.call($("#inputFile")[0].files);
        self.logoFileUploadding = true;
        uploadHomeBigLogo(files).then(function (data) {
          self.logoFiles = self.logoFiles.concat(data.saved);
          self.logoFileUploadding = false;
        });
        $("#inputFile").val("");
      },
      deleteBigLogo: function deleteBigLogo(index) {
        var logoFiles = this.logoFiles;
        var fileItem = logoFiles[index];
        console.log("你要删除: " + fileItem.aid);
        nkcAPI("/e/settings/home/list/biglogo", "POST", {
          type: "delete",
          aid: fileItem.aid
        }).then(function () {
          logoFiles.splice(index, 1);
          screenTopAlert('删除成功');
        })["catch"](function (err) {
          screenTopAlert(err.error);
        });
      }
    }
  });
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwYWdlcy9leHBlcmltZW50YWwvc2V0dGluZ3MvaG9tZS5tanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLFNBQVMsWUFBVCxHQUF3QjtBQUN2QixNQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsMkJBQUQsQ0FBWDtBQUNBLE1BQUksTUFBTSxHQUFHLEVBQWI7QUFDQSxNQUFJLEdBQUcsR0FBRyxFQUFWOztBQUNBLE9BQUksSUFBSSxDQUFDLEdBQUcsQ0FBWixFQUFlLENBQUMsR0FBRyxHQUFHLENBQUMsTUFBdkIsRUFBK0IsQ0FBQyxFQUFoQyxFQUFvQztBQUNuQyxRQUFJLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBSixDQUFPLENBQVAsRUFBVSxJQUFWLENBQWUsVUFBZixDQUFWO0FBQ0EsUUFBSSxLQUFLLEdBQUcsR0FBRyxDQUFDLEVBQUosQ0FBTyxDQUFQLEVBQVUsR0FBVixFQUFaO0FBQ0EsSUFBQSxLQUFLLEdBQUcsUUFBUSxDQUFDLEtBQUQsQ0FBaEI7O0FBQ0EsUUFBRyxNQUFNLENBQUMsTUFBUCxLQUFrQixDQUFyQixFQUF3QjtBQUN2QixNQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksS0FBWjtBQUNBLE1BQUEsR0FBRyxDQUFDLElBQUosQ0FBUyxHQUFUO0FBQ0EsS0FIRCxNQUdPO0FBQ04sVUFBSSxNQUFNLEdBQUcsS0FBYjs7QUFDQSxXQUFJLElBQUksQ0FBQyxHQUFHLENBQVosRUFBZSxDQUFDLEdBQUcsTUFBTSxDQUFDLE1BQTFCLEVBQWtDLENBQUMsRUFBbkMsRUFBdUM7QUFDdEMsWUFBRyxNQUFNLENBQUMsQ0FBRCxDQUFOLEdBQVksS0FBZixFQUFzQjtBQUNyQixVQUFBLE1BQU0sQ0FBQyxNQUFQLENBQWMsQ0FBZCxFQUFpQixDQUFqQixFQUFvQixLQUFwQjtBQUNBLFVBQUEsR0FBRyxDQUFDLE1BQUosQ0FBVyxDQUFYLEVBQWMsQ0FBZCxFQUFp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L0MsVUFBQSxHQUFHLEVBQUUsUUFBUSxDQUFDO0FBRmlDLFNBQTFDLENBQU4sQ0FJQyxJQUpELENBSU0sWUFBTTtBQUNYLFVBQUEsU0FBUyxDQUFDLE1BQVYsQ0FBaUIsS0FBakIsRUFBd0IsQ0FBeEI7QUFDQSxVQUFBLGNBQWMsQ0FBQyxNQUFELENBQWQ7QUFDQSxTQVBELFdBUU8sVUFBQSxHQUFHLEVBQUk7QUFDYixVQUFBLGNBQWMsQ0FBQyxHQUFHLENBQUMsS0FBTCxDQUFkO0FBQ0EsU0FWRDtBQVdBO0FBcEVTO0FBOUJPLEdBQVIsQ0FBVjtBQXFHRCIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImZ1bmN0aW9uIHNhdmVBZHNPcmRlcigpIHtcclxuXHR2YXIgYXJyID0gJCgnaW5wdXRbbmFtZT1cInRocmVhZE9yZGVyXCJdJyk7XHJcblx0dmFyIG9yZGVycyA9IFtdO1xyXG5cdHZhciBhZHMgPSBbXTtcclxuXHRmb3IodmFyIGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcblx0XHR2YXIgdGlkID0gYXJyLmVxKGkpLmF0dHIoJ2RhdGEtdGlkJyk7XHJcblx0XHR2YXIgb3JkZXIgPSBhcnIuZXEoaSkudmFsKCk7XHJcblx0XHRvcmRlciA9IHBhcnNlSW50KG9yZGVyKTtcclxuXHRcdGlmKG9yZGVycy5sZW5ndGggPT09IDApIHtcclxuXHRcdFx0b3JkZXJzLnB1c2gob3JkZXIpO1xyXG5cdFx0XHRhZHMucHVzaCh0aWQpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dmFyIHB1c2hlZCA9IGZhbHNlO1xyXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgb3JkZXJzLmxlbmd0aDsgaisrKSB7XHJcblx0XHRcdFx0aWYob3JkZXJzW2pdID4gb3JkZXIpIHtcclxuXHRcdFx0XHRcdG9yZGVycy5zcGxpY2UoaiwgMCwgb3JkZXIpO1xyXG5cdFx0XHRcdFx0YWRzLnNwbGljZShqLCAwLCB0aWQpO1xyXG5cdFx0XHRcdFx0cHVzaGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0XHRpZighcHVzaGVkKSB7XHJcblx0XHRcdFx0b3JkZXJzLnB1c2gob3JkZXIpO1xyXG5cdFx0XHRcdGFkcy5wdXNoKHRpZCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0bmtjQVBJKCcvZS9zZXR0aW5ncy9ob21lL3RvcCcsICdQVVQnLCB7b3BlcmF0aW9uOiAnbW9kaWZ5T3JkZXInLCBhZHM6IGFkc30pXHJcblx0XHQudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChmdW5jdGlvbihkYXRhKSB7XHJcblx0XHRcdHNjcmVlblRvcFdhcm5pbmcoZGF0YS5lcnJvcnx8ZGF0YSk7XHJcblx0XHR9KVxyXG59XHJcblxyXG5cclxuXHJcbiQoJyNpbnB1dEZpbGUnKS5vbignY2hhbmdlJywgZnVuY3Rpb24oKSB7XHJcblx0dmFyIGZpbGUgPSAkKCcjaW5wdXRGaWxlJylbMF0uZmlsZXNbMF07XHJcblx0aWYoZmlsZSkge1xyXG5cdFx0dXBMb2FkRmlsZSA9IGZpbGU7XHJcblx0XHR2YXIgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKTtcclxuXHRcdGZvcm1EYXRhLmFwcGVuZCgnZmlsZScsIHVwTG9hZEZpbGUpO1xyXG5cdFx0JC5hamF4KHtcclxuXHRcdFx0dXJsOiAnL2xvZ28nLFxyXG5cdFx0XHRtZXRob2Q6ICdQT1NUJyxcclxuXHRcdFx0Y2FjaGU6IGZhbHNlLFxyXG5cdFx0XHRkYXRhOiBmb3JtRGF0YSxcclxuXHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHRcdCdGUk9NJzogJ25rY0FQSSdcclxuXHRcdFx0fSxcclxuXHRcdFx0ZGF0YVR5cGU6ICdqc29uJyxcclxuXHRcdFx0Y29udGVudFR5cGU6IGZhbHNlLFxyXG5cdFx0XHRwcm9jZXNzRGF0YTogZmFsc2UsXHJcblx0XHR9KVxyXG5cdFx0XHQuZG9uZShmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XHJcblx0XHRcdH0pXHJcblx0XHRcdC5mYWlsKGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0XHRzY3JlZW5Ub3BXYXJuaW5nKEpTT04ucGFyc2UoZGF0YS5yZXNwb25zZVRleHQpLmVycm9yKTtcclxuXHRcdFx0fSlcclxuXHR9XHJcbn0pO1xyXG5cclxuZnVuY3Rpb24gZGVmYXVsdExvZ28oaWQsIHR5cGUpIHtcclxuXHRua2NBUEkoJy9lL3NldHRpbmdzL2hvbWUvbG9nbycsICdQVVQnLCB7aWQ6IGlkLCB0eXBlOiB0eXBlLCBvcGVyYXRpb246ICdzYXZlTG9nbyd9KVxyXG5cdFx0LnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZnVuY3Rpb24oZGF0YSkge1xyXG5cdFx0XHRzY3JlZW5Ub3BXYXJuaW5nKGRhdGEuZXJyb3J8fCBkYXRhKTtcclxuXHRcdH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0ZUxvZ28oaWQpIHtcclxuXHRua2NBUEkoJy9lL3NldHRpbmdzL2hvbWUvbG9nbz9pZD0nKyBpZCwgJ0RFTEVURScsIHt9KVxyXG5cdFx0LnRoZW4oZnVuY3Rpb24oKSB7XHJcblx0XHRcdHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTtcclxuXHRcdH0pXHJcblx0XHQuY2F0Y2goZnVuY3Rpb24oZGF0YSkge1xyXG5cdFx0XHRzY3JlZW5Ub3BXYXJuaW5nKGRhdGEuZXJyb3J8fCBkYXRhKTtcclxuXHRcdH0pXHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNhdmVOb3RpY2UoKSB7XHJcblx0dmFyIHZhbHVlID0gJCgnI3RocmVhZElkJykudmFsKCk7XHJcblx0dmFyIGFyciA9IHZhbHVlLnNwbGl0KCcsJyk7XHJcblx0bmtjQVBJKCcvZS9zZXR0aW5ncy9ob21lL25vdGljZScsICdQVVQnLCB7aWQ6IGFycn0pXHJcblx0XHQudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChmdW5jdGlvbihkYXRhKSB7XHJcblx0XHRcdHNjcmVlblRvcFdhcm5pbmcoZGF0YS5lcnJvcnx8IGRhdGEpO1xyXG5cdFx0fSlcclxufVxyXG5cclxuZnVuY3Rpb24gcmVtb3ZlTm90aWNlKG9jKSB7XHJcblx0bmtjQVBJKCcvZS9zZXR0aW5ncy9ob21lL25vdGljZT9vYz0nK29jLCAnREVMRVRFJywge30pXHJcblx0XHQudGhlbihmdW5jdGlvbigpIHtcclxuXHRcdFx0d2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xyXG5cdFx0fSlcclxuXHRcdC5jYXRjaChmdW5jdGlvbihkYXRhKSB7XHJcblx0XHRcdHNjcmVlblRvcFdhcm5pbmcoZGF0YS5lcnJvcnx8IGRhdGEpO1xyXG5cdFx0fSlcclxufVxyXG5cclxuZnVuY3Rpb24gc2F2ZVdhdGVyTWFya1NldHRpbmdzKCkge1xyXG5cdHZhciB3YXRlcm1hcmtUcmFuc3BhcmVuY3kgPSAkKCcjd2F0ZXJtYXJrVHJhbnNwYXJlbmN5JykudmFsKCk7XHJcblx0dmFyIHdhdGVyTGltaXRNaW5XaWR0aCA9ICQoXCIjd2F0ZXJMaW1pdE1pbldpZHRoXCIpLnZhbCgpO1xyXG4gIHZhciB3YXRlckxpbWl0TWluSGVpZ2h0ID0gJChcIiN3YXRlckxpbWl0TWluSGVpZ2h0XCIpLnZhbCgpO1xyXG5cdG5rY0FQSSgnL2Uvc2V0dGluZ3MvaG9tZS9sb2dvJywgJ1BVVCcsIHtcclxuXHRcdHdhdGVybWFya1RyYW5zcGFyZW5jeTogd2F0ZXJtYXJrVHJhbnNwYXJlbmN5LFxyXG4gICAgd2F0ZXJMaW1pdE1pbldpZHRoOiBwYXJzZUludCh3YXRlckxpbWl0TWluV2lkdGgpLFxyXG4gICAgd2F0ZXJMaW1pdE1pbkhlaWdodDogcGFyc2VJbnQod2F0ZXJMaW1pdE1pbkhlaWdodCksXHJcblx0XHRvcGVyYXRpb246ICdzYXZlV2F0ZXJNYXJrU2V0dGluZ3MnXHJcblx0fSlcclxuXHRcdC50aGVuKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRzY3JlZW5Ub3BBbGVydCgn5L+d5a2Y5oiQ5YqfJyk7XHJcblx0XHR9KVxyXG5cdFx0LmNhdGNoKGZ1bmN0aW9uKGRhdGEpIHtcclxuXHRcdFx0c2NyZWVuVG9wV2FybmluZyhkYXRhLmVycm9yfHwgZGF0YSk7XHJcblx0XHR9KVxyXG59XHJcblxyXG5cclxuZnVuY3Rpb24gdXBsb2FkSG9tZUJpZ0xvZ28oZmlsZXMpIHtcclxuXHR2YXIgZm9ybSA9IG5ldyBGb3JtRGF0YSgpO1xyXG5cdGZpbGVzLmZvckVhY2goKGZpbGUsIGluZGV4KSA9PiB7XHJcblx0XHRmb3JtLmFwcGVuZCgnZmlsZScgKyBpbmRleCwgZmlsZSk7XHJcblx0fSlcclxuXHRyZXR1cm4gbmtjVXBsb2FkRmlsZShcIi9lL3NldHRpbmdzL2hvbWUvbGlzdC9iaWdsb2dvXCIsIFwiUE9TVFwiLCBmb3JtKTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2F2ZUhvbWVMaXN0U2V0dGluZ3MoKSB7XHJcbiAgdmFyIGlucHV0cyA9ICQoJ2lucHV0W25hbWU9XCJsaXN0XCJdJyk7XHJcbiAgdmFyIHRvcGljID0gaW5wdXRzLmVxKDApLmlzKCc6Y2hlY2tlZCcpO1xyXG4gIHZhciBkaXNjaXBsaW5lID0gaW5wdXRzLmVxKDEpLmlzKCc6Y2hlY2tlZCcpO1xyXG4gIHZhciB2aXNpdG9yVGhyZWFkTGlzdCA9ICQoJ2lucHV0W25hbWU9XCJ2aXNpdG9yXCJdJyk7XHJcbiAgdmlzaXRvclRocmVhZExpc3QgPSB2aXNpdG9yVGhyZWFkTGlzdC5lcSgwKS5pcyhcIjpjaGVja2VkXCIpP1wibGF0ZXN0XCI6IFwicmVjb21tZW5kXCI7XHJcbiAgbmtjQVBJKCcvZS9zZXR0aW5ncy9ob21lL2xpc3QnLCAnUFVUJywge1xyXG4gICAgdG9waWM6IHRvcGljLFxyXG4gICAgZGlzY2lwbGluZTogZGlzY2lwbGluZSxcclxuICAgIHZpc2l0b3JUaHJlYWRMaXN0OiB2aXNpdG9yVGhyZWFkTGlzdFxyXG4gIH0pXHJcbiAgLnRoZW4oZnVuY3Rpb24oKSB7XHJcbiAgICBzY3JlZW5Ub3BBbGVydCgn5L+d5a2Y5oiQ5YqfJyk7XHJcbiAgfSlcclxuICAuY2F0Y2goZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgc2NyZWVuVG9wV2FybmluZyhkYXRhLmVycm9yIHx8IGRhdGEpO1xyXG4gIH0pO1xyXG59XHJcbnZhciB2dWVEb20gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImFwcFwiKTtcclxuaWYodnVlRG9tKSB7XHJcbiAgdmFyIGFwcCA9IG5ldyBWdWUoe1xyXG4gICAgZWw6ICcjYXBwJyxcclxuICAgIGRhdGE6IHtcclxuICAgICAgaG9tZVNldHRpbmdzOiAnJyxcclxuICAgICAgaW5mbzogJycsXHJcbiAgICAgIGxpc3Q6IFtdLFxyXG4gICAgICByZWNvbW1lbmQ6IFtdLFxyXG5cdFx0XHRlcnJvcjogXCJcIixcclxuXHRcdFx0bG9nb0ZpbGVzOiBbXSxcclxuXHRcdFx0bG9nb0ZpbGVVcGxvYWRkaW5nOiBmYWxzZVxyXG4gICAgfSxcclxuICAgIGJlZm9yZU1vdW50OiBmdW5jdGlvbigpIHtcclxuICAgICAgdmFyIGRhdGEgPSBOS0MubWV0aG9kcy5nZXREYXRhQnlJZChcImRhdGFcIik7XHJcbiAgICAgIGlmKGRhdGEuaG9tZVNldHRpbmdzLmxpc3QudG9waWMpIHtcclxuICAgICAgICB0aGlzLmxpc3QucHVzaChcInRvcGljXCIpO1xyXG4gICAgICB9XHJcbiAgICAgIGlmKGRhdGEuaG9tZVNldHRpbmdzLmxpc3QuZGlzY2lwbGluZSkge1xyXG4gICAgICAgIHRoaXMubGlzdC5wdXNoKFwiZGlzY2lwbGluZVwiKTtcclxuICAgICAgfVxyXG4gICAgICBpZihkYXRhLmhvbWVTZXR0aW5ncy5yZWNvbW1lbmQuZmVhdHVyZWRUaHJlYWRzKSB7XHJcbiAgICAgICAgdGhpcy5yZWNvbW1lbmQucHVzaChcImZlYXR1cmVkVGhyZWFkc1wiKVxyXG4gICAgICB9XHJcbiAgICAgIGlmKGRhdGEuaG9tZVNldHRpbmdzLnJlY29tbWVuZC5ob3RUaHJlYWRzKSB7XHJcbiAgICAgICAgdGhpcy5yZWNvbW1lbmQucHVzaChcImhvdFRocmVhZHNcIilcclxuXHRcdFx0fVxyXG5cdFx0XHR0aGlzLmhvbWVTZXR0aW5ncyA9IGRhdGEuaG9tZVNldHRpbmdzO1xyXG5cdFx0XHRpZihkYXRhLmhvbWVCaWdMb2dvKSB7XHJcblx0XHRcdFx0dGhpcy5sb2dvRmlsZXMgPSB0aGlzLmxvZ29GaWxlcy5jb25jYXQoZGF0YS5ob21lQmlnTG9nbyk7XHJcblx0XHRcdH1cclxuICAgIH0sXHJcbiAgICBtZXRob2RzOiB7XHJcbiAgICAgIHNhdmU6IGZ1bmN0aW9uKCkge1xyXG4gICAgICAgIHRoaXMuZXJyb3IgPSBcIlwiO1xyXG4gICAgICAgIHRoaXMuaW5mbyA9IFwiXCI7XHJcbiAgICAgICAgdmFyIGhvbWVTZXR0aW5ncyA9IHRoaXMuaG9tZVNldHRpbmdzO1xyXG4gICAgICAgIHZhciBsaXN0ID0gdGhpcy5saXN0O1xyXG4gICAgICAgIGhvbWVTZXR0aW5ncy5saXN0LnRvcGljID0gZmFsc2U7XHJcbiAgICAgICAgaG9tZVNldHRpbmdzLmxpc3QuZGlzY2lwbGluZSA9IGZhbHNlO1xyXG4gICAgICAgIGlmKGhvbWVTZXR0aW5ncy5ob3RUaHJlYWRzLnBvc3RDb3VudCA8IDApIHJldHVybiB0aGlzLmVycm9yID0gXCLng63pl6jmlofnq6DmnIDlsI/lm57lpI3mlbDkuI3og73lsI/kuo4wXCI7XHJcbiAgICAgICAgaWYoaG9tZVNldHRpbmdzLmhvdFRocmVhZHMucG9zdFVzZXJDb3VudCA8IDApIHJldHVybiB0aGlzLmVycm9yID0gXCLng63pl6jmlofnq6DmnIDlsI/lm57lpI3nlKjmiLfmgLvmlbDkuI3og73lsI/kuo4wXCI7XHJcbiAgICAgICAgdmFyIHJlY29tbWVuZCA9IHRoaXMucmVjb21tZW5kO1xyXG4gICAgICAgIGhvbWVTZXR0aW5ncy5yZWNvbW1lbmQuaG90VGhyZWFkcyA9IGZhbHNlO1xyXG4gICAgICAgIGhvbWVTZXR0aW5ncy5yZWNvbW1lbmQuZmVhdHVyZWRUaHJlYWRzID0gZmFsc2U7XHJcblxyXG4gICAgICAgIGlmKHJlY29tbWVuZC5pbmRleE9mKFwiaG90VGhyZWFkc1wiKSAhPT0gLTEpIGhvbWVTZXR0aW5ncy5yZWNvbW1lbmQuaG90VGhyZWFkcyA9IHRydWU7XHJcbiAgICAgICAgaWYocmVjb21tZW5kLmluZGV4T2YoXCJmZWF0dXJlZFRocmVhZHNcIikgIT09IC0xKSBob21lU2V0dGluZ3MucmVjb21tZW5kLmZlYXR1cmVkVGhyZWFkcyA9IHRydWU7XHJcbiAgICAgICAgaWYoaG9tZVNldHRpbmdzLnJlY29tbWVuZC52b3RlVXBUb3RhbCA8IDApIHJldHVybiB0aGlzLmVycm9yID0gXCLmjqjojZDmnaHku7bkuK3ngrnotZ7mgLvmlbDkuI3og73lsI/kuo4wXCI7XHJcbiAgICAgICAgaWYoaG9tZVNldHRpbmdzLnJlY29tbWVuZC52b3RlVXBNYXggPCAwKSByZXR1cm4gdGhpcy5lcnJvciA9IFwi5o6o6I2Q5p2h5Lu25Lit54us56uL54K56LWe5pWw5LiN6IO95bCP5LqOMFwiO1xyXG4gICAgICAgIGlmKGhvbWVTZXR0aW5ncy5yZWNvbW1lbmQuZW5jb3VyYWdlVG90YWwgPCAwKSByZXR1cm4gdGhpcy5lcnJvciA9IFwi5o6o6I2Q5p2h5Lu25Lit6byT5Yqx5qyh5pWw5LiN6IO95bCP5LqOMFwiO1xyXG4gICAgICAgIGlmKGxpc3QuaW5kZXhPZigndG9waWMnKSAhPT0gLTEpIHtcclxuICAgICAgICAgIGhvbWVTZXR0aW5ncy5saXN0LnRvcGljID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYobGlzdC5pbmRleE9mKFwiZGlzY2lwbGluZVwiKSAhPT0gLTEpIHtcclxuICAgICAgICAgIGhvbWVTZXR0aW5ncy5saXN0LmRpc2NpcGxpbmUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBua2NBUEkoJy9lL3NldHRpbmdzL2hvbWUvbGlzdCcsICdQVVQnLCB7XHJcbiAgICAgICAgICB0b3BpYzogaG9tZVNldHRpbmdzLmxpc3QudG9waWMsXHJcbiAgICAgICAgICBkaXNjaXBsaW5lOiBob21lU2V0dGluZ3MubGlzdC5kaXNjaXBsaW5lLFxyXG4gICAgICAgICAgdmlzaXRvclRocmVhZExpc3Q6IGhvbWVTZXR0aW5ncy52aXNpdG9yVGhyZWFkTGlzdCxcclxuICAgICAgICAgIGhvdFRocmVhZHM6IGhvbWVTZXR0aW5ncy5ob3RUaHJlYWRzLFxyXG4gICAgICAgICAgcmVjb21tZW5kOiBob21lU2V0dGluZ3MucmVjb21tZW5kXHJcbiAgICAgICAgfSlcclxuICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xyXG4gICAgICAgICAgXHRzd2VldFN1Y2Nlc3MoJ+S/neWtmOaIkOWKnycpO1xyXG4gICAgICAgICAgfSlcclxuICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihkYXRhKSB7XHJcbiAgICAgICAgICAgIGFwcC5lcnJvciA9IGRhdGEuZXJyb3IgfHwgZGF0YTtcclxuICAgICAgICAgIH0pO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRwaWNrUGljdHVyZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0JChcIiNpbnB1dEZpbGVcIikuY2xpY2soKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0YWRkRmlsZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0dmFyIHNlbGYgPSB0aGlzO1xyXG5cdFx0XHRcdHZhciBmaWxlcyA9IFtdLnNsaWNlLmNhbGwoJChcIiNpbnB1dEZpbGVcIilbMF0uZmlsZXMpO1xyXG5cdFx0XHRcdHNlbGYubG9nb0ZpbGVVcGxvYWRkaW5nID0gdHJ1ZTtcclxuXHRcdFx0XHR1cGxvYWRIb21lQmlnTG9nbyhmaWxlcylcclxuXHRcdFx0XHRcdC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHRcdFx0XHRzZWxmLmxvZ29GaWxlcyA9IHNlbGYubG9nb0ZpbGVzLmNvbmNhdChkYXRhLnNhdmVkKTtcclxuXHRcdFx0XHRcdFx0c2VsZi5sb2dvRmlsZVVwbG9hZGRpbmcgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0JChcIiNpbnB1dEZpbGVcIikudmFsKFwiXCIpO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRkZWxldGVCaWdMb2dvOiBmdW5jdGlvbihpbmRleCkge1xyXG5cdFx0XHRcdGxldCBsb2dvRmlsZXMgPSB0aGlzLmxvZ29GaWxlcztcclxuXHRcdFx0XHR2YXIgZmlsZUl0ZW0gPSBsb2dvRmlsZXNbaW5kZXhdO1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKFwi5L2g6KaB5Yig6ZmkOiBcIiArIGZpbGVJdGVtLmFpZCk7XHJcblx0XHRcdFx0bmtjQVBJKFwiL2Uvc2V0dGluZ3MvaG9tZS9saXN0L2JpZ2xvZ29cIiwgXCJQT1NUXCIsIHtcclxuXHRcdFx0XHRcdHR5cGU6IFwiZGVsZXRlXCIsXHJcblx0XHRcdFx0XHRhaWQ6IGZpbGVJdGVtLmFpZFxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdFx0LnRoZW4oKCkgPT4ge1xyXG5cdFx0XHRcdFx0bG9nb0ZpbGVzLnNwbGljZShpbmRleCwgMSk7XHJcblx0XHRcdFx0XHRzY3JlZW5Ub3BBbGVydCgn5Yig6Zmk5oiQ5YqfJyk7XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0XHQuY2F0Y2goZXJyID0+IHtcclxuXHRcdFx0XHRcdHNjcmVlblRvcEFsZXJ0KGVyci5lcnJvcik7XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG4gICAgfVxyXG4gIH0pO1xyXG59XHJcbiJdfQ==
