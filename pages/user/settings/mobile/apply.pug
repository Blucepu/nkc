extends ../../../bootstrap_base
block title
  title 手机号失效的申诉
  style.
    .address{
      display: inline-block;
      height: 2rem;
      line-height: 2rem;
      padding: 0 0.5rem;
      background-color: #2b90d9;
      color: #fff;
      margin-right: 0.5rem;
      margin-bottom: 0.5rem;
      font-size: 1rem;
      border-radius: 3px;
    }
    .address .fa{
      color: #fff;
      cursor: pointer;
    }
    .warning-info{
      font-size: 1rem;
      color: #333;
      margin-top: 0.3rem;
    }
block content
  -var showForm = data.bindEmail && data.authLevel >= 2;
  #data.hidden=objToStr({bindEmail: data.bindEmail, authLevel: data.authLevel, pendingApplication: data.pendingApplication})
  .container-fluid.max-width
    .row
      .col-xs-12.col-md-8#app(v-cloak)
        .panel.panel-default
          .panel-heading 手机号失效申述
          .panle-body.text-center.p-t-2.p-b-2(v-if='pendingApplication')
            h4 已提交，请耐心等待~
          .panel-body(v-else)
            h5 申诉条件
            ul
              li
                span.m-r-1 绑定邮箱
                if data.bindEmail
                  span.text-success 已完成
                else
                  a(href=`/u/${state.uid}/settings/security` target="_blank") 去绑定
              li
                span.m-r-1 完成身份认证 2
                if data.authLevel >= 2
                  span.text-success 已完成
                else
                  a(href=`/u/${state.uid}/settings/verify` target="_blank") 去认证
            if !showForm
              span 完成后请点击
              button.btn.btn-default.btn-xs(@click='reloadPage') 刷新
            else
              .row
                .col-xs-12.col-md-12
                  hr
                  .form-horizontal
                    .form-group
                      label.control-label.col-sm-3 常用登录地点
                      .col-sm-9
                        span.address(v-for='(a, index) in addresses')
                          span.m-r-05 {{a}}
                          .fa.fa-remove(@click='removeFromArr(addresses, index)')
                        button.btn.btn-default.btn-sm(@click='addLoginLocation') 添加
                        div.warning-info 至少1个，最多3个
                    .form-group
                      label.col-sm-3.control-label 登录密码
                      .col-sm-4
                        input.form-control(type='password' v-model='password' placeholder='请输入登录密码')
                    .form-group
                      label.col-sm-3.control-label 新国际区号
                      .col-sm-4
                        select.form-control(v-model="newNationCode")
                          option(v-for="n in nationCodes" :value="n.code") +{{n.code}} {{n.chineseName}}
                    .form-group
                      label.col-sm-3.control-label 新手机号
                      .col-sm-4
                        input.form-control(type='text' v-model='newNumber' placeholder='请输入手机号')
                    .form-group
                      label.col-sm-3.control-label 短信验证码
                      .col-sm-2
                        input.form-control(type='text' placeholder='请输入验证码' v-model="newCode")
                      .col-sm-5
                        button.btn.btn-primary(@click=`sendMessage` v-if="time <= 0") 获取验证码
                        button.btn.btn-primary(v-else disabled) 获取验证码({{time}})
                    .form-group
                      label.col-sm-3.control-label
                      .col-sm-4
                        button.btn.btn-primary(@click='submit') 提交



  include ../../../publicModules/selectAddress/selectAddress
  +includeJS('/nationCodes/nationCodes.js')

block scripts
  script.
    var data = NKC.methods.getDataById('data');
    var app = new Vue({
      el: '#app',
      data: {
        pendingApplication: data.pendingApplication,
        bindEmail: data.bindEmail,
        authLevel: data.authLevel,
        selectAddress: new NKC.modules.SelectAddress(),
        addresses: [],

        time: 0,

        password: '',
        newNationCode: '86',
        newNumber: '',
        newCode: '',
        nationCodes: nationCodes,
      },
      methods: {
        removeFromArr: function(arr, index) {
          arr.splice(index, 1);
        },
        reloadPage: function() {
          window.location.reload();
        },
        addLoginLocation: function() {
          var self = this;
          this.selectAddress.open(function(data) {
            var address = data.join(' ');
            if(self.addresses.indexOf(address) === -1) {
              self.addresses.push(address)
            }
          });
        },
        startTimeout: function() {
          var self = this;
          setTimeout(function() {
            self.time --;
            if(self.time > 0) {
              self.startTimeout();
            }
          }, 1000);
        },
        checkNewPhoneNumber: function() {
          if (!this.newNationCode) throw '新国际区号不能为空';
          if (!this.newNumber) throw '新手机号不能为空';
        },
        sendMessage: function() {
          var self = this;
          Promise.resolve()
            .then(function() {
              self.checkNewPhoneNumber();
              return nkcAPI('/sendMessage/common', 'POST', {
                number: self.newNumber,
                nationCode: self.newNationCode,
                type: 'changeUnusedPhoneNumber'
              });
            })
            .then(function() {
              self.time = 120;
              self.startTimeout();
            })
            .catch(sweetError)
        },
        submit: function() {
          var self = this;
          Promise.resolve()
            .then(function() {
              if (self.addresses.length < 1) throw '请至少选择一个常用登录地址';
              if (self.addresses.length > 3) throw '最多选择三个常用登录地址';
              if(!self.password) throw '请输入登录密码';
              self.checkNewPhoneNumber();
              if(!self.newCode) throw '请输入短信验证码';
              return nkcAPI('/u/' + NKC.configs.uid + '/settings/mobile/apply', 'POST', {
                phoneNumber: self.newNumber,
                nationCode: self.newNationCode,
                type: 'changeUnusedPhoneNumber',
                code: self.newCode,
                password: self.password,
                addresses: self.addresses
              });
            })
            .then(function() {
              sweetSuccess('提交成功');
              self.pendingApplication = true;
            })
            .catch(sweetError);
        }
      }
    });
