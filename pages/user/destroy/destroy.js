(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var data = NKC.methods.getDataById("data");
var app = new Vue({
  el: "#app",
  data: {
    verifyEmail: data.verifyEmail,
    verifyMobile: data.verifyMobile,
    verifyPassword: data.verifyPassword,
    mobileCode: "",
    emailCode: "",
    password: "",
    passed: !data.verifyEmail && !data.verifyMobile && !data.verifyPassword,
    mobileTime: 0,
    emailTime: 0
  },
  computed: {
    disableVerifyButton: function disableVerifyButton() {
      var verifyEmail = this.verifyEmail,
          verifyMobile = this.verifyMobile,
          verifyPassword = this.verifyPassword,
          mobileCode = this.mobileCode,
          emailCode = this.emailCode,
          password = this.password;
      return verifyPassword && !password || verifyEmail && !emailCode || verifyMobile && !mobileCode;
    }
  },
  methods: {
    reduceTime: function reduceTime(type) {
      var self = this;
      setTimeout(function () {
        self[type]--;

        if (self[type] > 0) {
          self.reduceTime(type);
        }
      }, 1000);
    },
    sendEmailCode: function sendEmailCode() {
      if (this.emailTime > 0) return;
      var self = this;
      NKC.methods.sendEmailCode("destroy").then(function () {
        sweetSuccess("验证码已发送");
        self.emailTime = 120;
        self.reduceTime("emailTime");
      })["catch"](sweetError);
    },
    sendMobileCode: function sendMobileCode() {
      if (this.mobileTime > 0) return;
      var self = this;
      NKC.methods.sendMobileCode("destroy").then(function () {
        sweetSuccess("验证码已发送");
        self.mobileTime = 120;
        self.reduceTime("mobileTime");
      })["catch"](sweetError);
    },
    verify: function verify() {
      var self = this;
      var emailCode = this.emailCode,
          mobileCode = this.mobileCode,
          password = this.password;
      nkcAPI("/u/".concat(NKC.configs.uid, "/destroy"), "POST", {
        type: "verify",
        form: {
          emailCode: emailCode,
          mobileCode: mobileCode,
          password: password
        }
      }).then(function () {
        self.passed = true;
      })["catch"](sweetError);
    },
    submit: function submit() {
      var emailCode = this.emailCode,
          mobileCode = this.mobileCode,
          password = this.password;
      sweetQuestion("确定即会注销，注销后不可以用相同用户名重新注册，你将不能再对该账号及其发表的内容进行任何处置，你想好了吗？").then(function () {
        return nkcAPI("/u/".concat(NKC.configs.uid, "/destroy"), "POST", {
          type: "destroy",
          form: {
            emailCode: emailCode,
            mobileCode: mobileCode,
            password: password
          }
        });
      }).then(function () {
        // 注销完成
        if (NKC.configs.isApp) {
          emitEvent("logout");
        } else {
          window.location.href = "/";
        }
      })["catch"](sweetError);
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
