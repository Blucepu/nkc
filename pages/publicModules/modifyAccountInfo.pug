style.

.modal.fade#moduleModifyAccountInfo(tabindex="-1" role="dialog" aria-labelledby="myModalLabel")
  .modal-dialog(role="document")
    .modal-content#moduleModifyAccountInfoApp
      .modal-header
        button(type="button" class="close" data-dismiss="modal" aria-label="Close")
          span(aria-hidden="true") &times;
        h5.modal-title 用户信息
      .modal-body
        .text-center.m-t-5.m-b-5(v-if="loading") 加载中...
        .form(v-else)
          .form-group
            label UID
            input.form-control(disabled v-model="user.uid")
          .form-group
            label 用户名
            input.form-control(v-model.trim="user.username" type="text")
          .form-group
            label 个人简介
            textarea.form-control(v-model.trim="user.description" rows=3)
          .form-group
            label 邮箱
            input.form-control(v-model.trim="usersPersonal.email" type="text")
          .form-group
            label 国际区号
            select.form-control(v-model="usersPersonal.nationCode")
              option(value="") 无
              option(v-for="code in nationCodes" :value="code.code") +{{code.code}} {{code.chineseName}}
          .form-group
            label 手机号
            input.form-control(v-model.trim="usersPersonal.mobile" type="text")
          .form-group
            label 新密码
            input.form-control(v-model.trim="password" type="password" autocomplete="new-password" )
          .form-group
            label 已获得的证书
            div
              .checkbox
                label.inline-block.m-r-1(v-for="role in roles")
                  input(type="checkbox" v-model="user.certs" :value="role._id")
                  | {{role.displayName}}
      .modal-footer
        button(type="button" class="btn btn-sm btn-default" data-dismiss="modal") 取消
        button(type="button" class="btn btn-sm btn-primary" @click="complete") 保存
+includeJS("/nationCodes/nationCodes.js")
script.
  NKC.modules.ModifyAccountInfo = function() {
    var this_ = this;
    this_.dom = $("#moduleModifyAccountInfo");
    this_.dom.modal({
      show: false,
      backdrop: "static"
    });
    this_.app = new Vue({
      el: "#moduleModifyAccountInfoApp",
      data: {
        loading: true,
        uid: "",
        user: "",
        usersPersonal: "",
        userGrade: "",
        password: "",
        roles: [],
        nationCodes: nationCodes
      },
      methods: {
        init: function() {
          this.loading = true;
          this.uid = "";
          this.user = "";
          this.usersPersonal = "";
          this.userGrade = "";
          this.roles = [];
          this.password = "";
        },
        getUserInfo: function() {
          var uid = this.uid;
          if(!uid) sweetError("uid不存在");
          nkcAPI("/e/settings/user/" + uid, "GET")
            .then(function(data) {
              this_.app.user = data.targetUser;
              this_.app.usersPersonal = data.targetUsersPersonal;
              this_.app.roles = data.roles;
              this_.app.loading = false;
            })
            .catch(function(data) {
              sweetError(data);
            })
        },
        complete: function() {
          var user = this.user;
          var usersPersonal = this.usersPersonal;
          var password = this.password;
          var func;
          if(password) {
            func = sweetConfirm;
          } else {
            func = function() {
              return Promise.resolve();
            };
          }
          func("检测到您输入了新密码，保存后旧密码将会被覆盖，确定要执行此操作吗？")
            .then(function() {
              return nkcAPI("/e/settings/user/" + user.uid, "PUT", {
                username: user.username || "",
                description: user.description || "",
                email: usersPersonal.email,
                mobile: usersPersonal.mobile,
                nationCode: usersPersonal.nationCode,
                certs: user.certs || [],
                password: password
              });
            })
            .then(function() {
              this_.close();
              sweetSuccess("保存成功");
            })
            .catch(function(data) {
              sweetError(data);
            })
        }
      }
    });
    this_.open = function(options) {
      options = options || {};
      this_.app.init();
      this_.app.uid = options.uid;
      this_.app.getUserInfo();
      this_.dom.modal("show");
    };
    this_.close = function() {
      this_.dom.modal("hide");
    }
  }
