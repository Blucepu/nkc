(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var SubscribeTypes;
var forumInfo = NKC.methods.getDataById('forumInfo');
var fid = forumInfo.fid,
    page = forumInfo.page,
    digest = forumInfo.digest,
    sort = forumInfo.sort;
$(function () {
  if (!window.SubscribeTypes) {
    SubscribeTypes = new NKC.modules.SubscribeTypes();
  }

  var dom = $("#navbar_custom_dom");
  var leftDom = $("#leftDom");
  dom.html(leftDom.html());

  if (NKC.configs.lid) {
    window.Library = new NKC.modules.Library({
      lid: NKC.configs.lid,
      folderId: NKC.configs.folderId,
      tLid: NKC.configs.tLid,
      closed: NKC.configs.closed,
      uploadResourcesId: NKC.configs.uploadResourcesId ? NKC.configs.uploadResourcesId.split("-") : []
    });
  }

  var threadUrlSwitch = $('#threadUrlSwitch');

  if (threadUrlSwitch.length) {
    var threadUrlSwitchStatus = getThreadUrlSwitchStatus();
    modifyThreadUrl(threadUrlSwitchStatus);
    threadUrlSwitch.on("click", function () {
      var s = $(this).prop('checked');
      modifyThreadUrl(s);
    });
  }

  if (NKC.configs.uid) {
    connectForumRoom();
  }
});
var threadUrlSwitchKey = 'forum_thread_a_target';

function modifyThreadUrl(status) {
  var target = status ? '_blank' : '_self';
  $('.thread-panel-url').attr('target', target);
  $('#threadUrlSwitch').prop('checked', !!status);
  setThreadUrlSwitchStatus(status);
}
/*
* @return {Boolean}
* */


function getThreadUrlSwitchStatus() {
  return localStorage.getItem(threadUrlSwitchKey) === 'true';
}

function setThreadUrlSwitchStatus(status) {
  localStorage.setItem(threadUrlSwitchKey, status);
}

window.openEditSite = function () {
  var url = window.location.origin + "/editor?type=forum&id=" + fid;

  if (NKC.configs.platform === 'reactNative') {
    NKC.methods.rn.emit("openEditorPage", {
      url: url
    });
  } else if (NKC.configs.platform === 'apiCloud') {
    api.openWin({
      name: url,
      url: 'widget://html/common/editorInfo.html',
      pageParam: {
        realUrl: url,
        shareType: "common"
      }
    });
  } else {
    NKC.methods.visitUrl(url, true);
  }
};
/*
* 连入房间
* */


function joinRoom() {
  socket.emit('joinRoom', {
    type: 'forum',
    data: {
      forumId: fid
    }
  });
}
/*
* 连接上专业房间
* */


function connectForumRoom() {
  socket.on('connect', function () {
    joinRoom();
  });
  socket.on('forumMessage', function (data) {
    var html = data.html,
        tid = data.tid,
        contentType = data.contentType;
    var threadList = $('div.normal-thread-list');
    var targetThread = threadList.find('div[data-tid="' + tid + '"]');
    var targetThreadCounter = threadList.find('div[data-tid="' + tid + '"] span.thread-panel-counter');
    var newPostCount = 0; // 获取当前未读数

    if (targetThreadCounter.length) {
      newPostCount = Number(targetThreadCounter.attr('data-count'));
    }

    if (page === 0 && // 处于专业首页
    digest === data.digest && (contentType === 'thread' || sort === 'tlm') // 发表文章或发表回复且按回复排序
    ) {
        // 处于专业首页 更新时先移除旧元素再在列表头部插入新元素
        targetThread.remove();
        targetThread = $(html);
        threadList.prepend(targetThread);
      } else {
      if (!targetThread) return;
      targetThreadCounter.remove();
    }

    newPostCount++;
    var counter = $("<span class='thread-panel-counter' data-count='" + newPostCount + "' title='" + newPostCount + "条更新'>" + newPostCount + "</span>");
    targetThread.prepend(counter);
    floatUserPanel.initPanel();
    floatForumPanel.initPanel();
  });

  if (socket.connected) {
    joinRoom();
  }
}

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
