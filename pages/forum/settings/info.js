(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

function toEditor(fid) {
  window.location.href = '/editor?type=forum_declare&id=' + fid;
}

function submit(fid, fn) {
  var obj = {
    displayName: $('#displayName').val(),
    abbr: $('#abbr').val(),
    color: $('#color').val(),
    description: $('#description').val(),
    brief: $('#brief').val(),
    basicThreadsId: $('#basicThreadsId').val(),
    noticeThreadsId: $('#noticeThreadsId').val(),
    valuableThreadsId: $('#valuableThreadsId').val()
  };
  nkcAPI('/f/' + fid + '/settings/info', 'PATCH', obj).then(function () {
    if (fn) {
      fn(fid);
    } else {
      screenTopAlert('保存成功');
    }
  })["catch"](function (data) {
    screenTopWarning(data.error || data);
  });
}

var data = NKC.methods.getDataById('data');
var forum = data.forum;
forum._noticeThreadsId = (forum.noticeThreadsId || []).join(", ");
forum._basicThreadsId = (forum.basicThreadsId || []).join(", ");
forum._valuableThreadsId = (forum.valuableThreadsId || []).join(", ");
var selectImage = new NKC.methods.selectImage();
var app = new Vue({
  el: '#app',
  data: {
    logoData: '',
    logoFile: '',
    bannerData: '',
    bannerFile: '',
    forum: forum
  },
  mounted: function mounted() {
    var self = this;
    setTimeout(function () {
      NKC.methods.initSelectColor(function (color) {
        self.forum.color = color;
      });
    }, 100);
  },
  methods: {
    getUrl: NKC.methods.tools.getUrl,
    str2arr: function str2arr(str) {
      var arr = str.split(',');
      var _arr = [];
      arr.map(function (a) {
        a = a.trim();
        if (a) _arr.push(a);
      });
      return _arr;
    },
    selectLogo: function selectLogo() {
      var self = this;
      selectImage.show(function (d) {
        var file = NKC.methods.blobToFile(d);
        NKC.methods.fileToUrl(file).then(function (d) {
          self.logoData = d;
          self.logoFile = file;
          selectImage.close();
        });
      }, {
        aspectRatio: 1
      });
    },
    selectBanner: function selectBanner() {
      var self = this;
      selectImage.show(function (d) {
        var file = NKC.methods.blobToFile(d);
        NKC.methods.fileToUrl(file).then(function (d) {
          self.bannerData = d;
          self.bannerFile = file;
          selectImage.close();
        });
      }, {
        aspectRatio: 4
      });
    },
    toEditor: function toEditor() {
      NKC.methods.visitUrl('/editor?type=forum_declare&id=' + this.forum.fid, true);
    },
    save: function save() {
      var self = this;
      var forum = self.forum;
      Promise.resolve().then(function () {
        forum.noticeThreadsId = self.str2arr(forum._noticeThreadsId);
        forum.basicThreadsId = self.str2arr(forum._basicThreadsId);
        forum.valuableThreadsId = self.str2arr(forum._valuableThreadsId);
        var formData = new FormData();
        formData.append('forum', JSON.stringify(forum));

        if (self.logoFile) {
          formData.append('logo', self.logoFile);
        }

        if (self.bannerFile) {
          formData.append('banner', self.bannerFile);
        }

        return nkcUploadFile("/f/".concat(self.forum.fid, "/settings/info"), 'PATCH', formData);
      }).then(function (data) {
        if (data.logo) {
          self.logoData = '';
          self.logoFile = '';
          self.forum.logo = data.logo;
        }

        if (data.banner) {
          self.bannerData = '';
          self.bannerFile = '';
          self.forum.banner = data.banner;
        }

        sweetSuccess('保存成功');
      })["catch"](sweetError);
    }
  }
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
