!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(){return(e=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var n={_store:{},on:function(e,t){n._store[e]||(n._store[e]=[]),n._store[e].push(t)},emit:function(e,t){n._store[e]&&n._store[e].forEach((function(e){e.apply(null,t)}))},connected:!0,disconnect:!1};if("serviceWorker"in navigator)navigator.serviceWorker.register("/serviceWorker/index.js").then((function(e){return e.update()})).then((function(e){return new Promise((function(n,t){if(e.active)return n(e.active);e.addEventListener("updatefound",(function(){if(e.active)return n(e.active)}))}))})).then((function(e){NKC.modules.serviceWorker=e,n.emit("connect"),navigator.serviceWorker.addEventListener("message",(function(e){var t=e.data;if("socket_event_trigger"===t.type){var o=t.detail;console.log(o),n.emit(o.name,o.args)}}))})).catch((function(e){console.log("Registration failed with "+e)}));else{var t="",o={operationId:NKC.configs.refererOperationId,data:NKC.configs.socketData||{}};n=io("/common",{forceNew:!1,reconnection:!0,autoConnect:!0,transports:["polling","websocket"],reconnectionDelay:5e3,reconnectionDelayMax:1e4,query:o})}n.on("connect",(function(){console.log("socket连接成功")})),n.on("error",(function(){console.log("socket连接出错"),n.disconnect()})),n.on("disconnect",(function(){console.log("socket连接已断开")}));var i=function(){var e=$(".message-count").html();return e=Number(e)},c=function(e){var n=$(".message-switch"),t=$(".message-count");n.removeClass("hidden"),t.html(e)};function r(e){if(!t||"message"!==t){beep(e);var n=i();c(n+1)}}NKC.configs.isApp||n.on("message",(function(e){if(e.message){var n=e.message.ty;if(n)if("STE"===n)r("notice");else if("STU"===n)r("reminder");else if("UTU"===n){var t=e.user,o=e.myUid;t.uid!==o&&r("message")}else"friendsApplication"===n&&r("friendsApplication")}})),e(window,{socket:n,addSocketStatusChangedEvent:function(e){for(var t=[{type:"connect",name:"已连接"},{type:"disconnect",name:"连接已断开"},{type:"error",name:"连接出错"},{type:"connecting",name:"正在连接"},{type:"reconnecting",name:"正在重连"},{type:"reconnect",name:"重连成功"},{type:"connect_failed",name:"连接失败"},{type:"reconnect_failed",name:"重连失败"},{type:"connect_timeout",name:"连接超时"}],o=function(t){n.on(t.type,(function(){e(t)}))},i=0;i<t.length;i++){o(t[i])}},getNewMessageNumber:i,setNewMessageNumber:c,newMessageRemind:r})}));
